[{"C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\index.js":"1","C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\App.js":"2","C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\Helpers\\auth-helpers.js":"3","C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\Context\\user-context.jsx":"4","C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\Context\\modal-context.jsx":"5","C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\pages\\Usuarios.jsx":"6","C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\pages\\EditarUsuarios.jsx":"7","C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\pages\\Empresas.jsx":"8","C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\pages\\AgregarUsuarios.jsx":"9","C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\pages\\EditarEmpresa.jsx":"10","C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\pages\\AgregarEmpresa.jsx":"11","C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\pages\\AgregarContactoEmpresa.jsx":"12","C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\pages\\EditarContactoEmpresa.jsx":"13","C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\pages\\Areas.jsx":"14","C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\pages\\EditarAreas.jsx":"15","C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\pages\\EditarEstacion.jsx":"16","C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\pages\\Estaciones.jsx":"17","C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\pages\\ContactoEmpresa.jsx":"18","C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\pages\\AgregarAreas.jsx":"19","C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\pages\\AgregarEstacion.jsx":"20","C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\pages\\QRList.jsx":"21","C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\pages\\GraficasAÃ±oArea.jsx":"22","C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\pages\\GraficasMes.jsx":"23","C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\pages\\Graficas.jsx":"24","C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\pages\\Historial.jsx":"25","C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\pages\\Login.jsx":"26","C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\components\\PrivateRoute.jsx":"27","C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\pages\\Cliente.jsx":"28","C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\pages\\GraficasAnual.jsx":"29","C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\components\\Layout.jsx":"30","C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\components\\Buttons.jsx":"31","C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\components\\Modal.jsx":"32","C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\components\\FormUsuarios.jsx":"33","C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\components\\CardEmpresa.jsx":"34","C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\components\\CardArea.jsx":"35","C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\components\\FormEmpresa.jsx":"36","C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\components\\FormEstacion.jsx":"37","C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\components\\CardRevision.jsx":"38","C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\components\\TableRastrero.jsx":"39","C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\components\\TablaVoladores.jsx":"40","C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\components\\ContainerTablaAreaAnual.jsx":"41","C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\components\\CardQR.jsx":"42","C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\components\\CardEstacion.jsx":"43","C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\components\\TableAreaAnualRastrero.jsx":"44","C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\components\\TableAreaAnualVolador.jsx":"45","C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\Helpers\\model.js":"46","C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\components\\DescripcionEstaciones.jsx":"47"},{"size":433,"mtime":1601425391084,"results":"48","hashOfConfig":"49"},{"size":4675,"mtime":1612468860485,"results":"50","hashOfConfig":"49"},{"size":663,"mtime":1613252064302,"results":"51","hashOfConfig":"49"},{"size":2072,"mtime":1602824183685,"results":"52","hashOfConfig":"49"},{"size":820,"mtime":1601428819358,"results":"53","hashOfConfig":"49"},{"size":3824,"mtime":1604032252171,"results":"54","hashOfConfig":"49"},{"size":2206,"mtime":1608582184633,"results":"55","hashOfConfig":"49"},{"size":3576,"mtime":1613259386274,"results":"56","hashOfConfig":"49"},{"size":1671,"mtime":1608581958033,"results":"57","hashOfConfig":"49"},{"size":1401,"mtime":1602728216045,"results":"58","hashOfConfig":"49"},{"size":1037,"mtime":1602728353997,"results":"59","hashOfConfig":"49"},{"size":1868,"mtime":1608582606466,"results":"60","hashOfConfig":"49"},{"size":2450,"mtime":1608595247387,"results":"61","hashOfConfig":"49"},{"size":4005,"mtime":1613259001674,"results":"62","hashOfConfig":"49"},{"size":2035,"mtime":1601429305359,"results":"63","hashOfConfig":"49"},{"size":1564,"mtime":1611172323215,"results":"64","hashOfConfig":"49"},{"size":8399,"mtime":1613262026610,"results":"65","hashOfConfig":"49"},{"size":3795,"mtime":1608595176227,"results":"66","hashOfConfig":"49"},{"size":1697,"mtime":1602728347488,"results":"67","hashOfConfig":"49"},{"size":1033,"mtime":1601428260430,"results":"68","hashOfConfig":"49"},{"size":1606,"mtime":1602031846248,"results":"69","hashOfConfig":"49"},{"size":3364,"mtime":1613096845054,"results":"70","hashOfConfig":"49"},{"size":11621,"mtime":1613255169935,"results":"71","hashOfConfig":"49"},{"size":3009,"mtime":1603673181207,"results":"72","hashOfConfig":"49"},{"size":3215,"mtime":1613096740901,"results":"73","hashOfConfig":"49"},{"size":3763,"mtime":1608581592372,"results":"74","hashOfConfig":"49"},{"size":552,"mtime":1601657687482,"results":"75","hashOfConfig":"49"},{"size":3259,"mtime":1602967329513,"results":"76","hashOfConfig":"49"},{"size":11494,"mtime":1613262235251,"results":"77","hashOfConfig":"49"},{"size":3976,"mtime":1608582247057,"results":"78","hashOfConfig":"49"},{"size":775,"mtime":1600452013541,"results":"79","hashOfConfig":"49"},{"size":345,"mtime":1598481728767,"results":"80","hashOfConfig":"49"},{"size":3901,"mtime":1608594603982,"results":"81","hashOfConfig":"49"},{"size":1447,"mtime":1601351517027,"results":"82","hashOfConfig":"49"},{"size":908,"mtime":1606580978675,"results":"83","hashOfConfig":"49"},{"size":2226,"mtime":1602728145158,"results":"84","hashOfConfig":"49"},{"size":3173,"mtime":1609788138247,"results":"85","hashOfConfig":"49"},{"size":1461,"mtime":1612479648244,"results":"86","hashOfConfig":"49"},{"size":3899,"mtime":1603680077160,"results":"87","hashOfConfig":"49"},{"size":4265,"mtime":1611880649249,"results":"88","hashOfConfig":"49"},{"size":1693,"mtime":1613096371250,"results":"89","hashOfConfig":"49"},{"size":534,"mtime":1604082956557,"results":"90","hashOfConfig":"49"},{"size":2667,"mtime":1613258504944,"results":"91","hashOfConfig":"49"},{"size":2878,"mtime":1613096542483,"results":"92","hashOfConfig":"49"},{"size":3002,"mtime":1613096411996,"results":"93","hashOfConfig":"49"},{"size":806,"mtime":1608514230245,"results":"94","hashOfConfig":"49"},{"size":988,"mtime":1612482578043,"results":"95","hashOfConfig":"49"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},"ihjww1",{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"98"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"98"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"98"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"98"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"98"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"193"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},"C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\index.js",[],["198","199"],"C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\App.js",[],"C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\Helpers\\auth-helpers.js",[],"C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\Context\\user-context.jsx",[],"C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\Context\\modal-context.jsx",[],"C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\pages\\Usuarios.jsx",[],"C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\pages\\EditarUsuarios.jsx",["200"],"import React, { useEffect, useState } from \"react\";\r\nimport { Container, Typography } from \"@material-ui/core\";\r\nimport FormUsuarios from \"../components/FormUsuarios\";\r\nimport Axios from \"axios\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport { useModal } from \"../Context/modal-context\";\r\nimport { useFormik } from \"formik\";\r\nimport { usuario } from \"../Helpers/model\";\r\nfunction EditarUsuario() {\r\n  const history = useHistory();\r\n  const { setLoading } = useModal();\r\n  const { idUsuario } = useParams();\r\n  const [error, setError] = useState(false);\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      nombre: \"\",\r\n      apellido: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      telefono: \"\",\r\n      tipo_usuario: \"\",\r\n      isTrabajando: false,\r\n    },\r\n    validationSchema: usuario,\r\n    onSubmit: async (data) => {\r\n      if (\r\n        data.nombre === \"\" ||\r\n        data.apellido === \"\" ||\r\n        data.email === \"\" ||\r\n        data.password === \"\" ||\r\n        data.telefono === \"\"\r\n      ) {\r\n        setError(true);\r\n        setLoading(false);\r\n        return;\r\n      }\r\n      try {\r\n        await Axios.patch(`/usuarios/${idUsuario}`, data);\r\n        history.goBack();\r\n      } catch (error) {\r\n        setError(true);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    },\r\n  });\r\n  useEffect(() => {\r\n    const buscarUsuario = async () => {\r\n      const { data } = await Axios.get(`/usuarios/${idUsuario}`);\r\n      return data;\r\n    };\r\n    setLoading(true);\r\n    buscarUsuario().then((usuario) => {\r\n      formik.initialValues.nombre = usuario.nombre;\r\n      formik.initialValues.apellido = usuario.apellido;\r\n      formik.initialValues.email = usuario.email;\r\n      formik.initialValues.telefono = usuario.telefono;\r\n      formik.initialValues.tipo_usuario = usuario.tipo_usuario;\r\n      formik.initialValues.isTrabajando = usuario.isTrabajando;\r\n      setLoading(false);\r\n    });\r\n  }, [idUsuario]);\r\n  return (\r\n    <Container>\r\n      <Typography variant=\"h4\" align=\"center\" gutterBottom>\r\n        Editar Usuario\r\n      </Typography>\r\n      <FormUsuarios error={error} formik={formik} />\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default EditarUsuario;\r\n","C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\pages\\Empresas.jsx",["201","202","203","204","205","206","207"],"import React, { useEffect, useState } from \"react\";\r\nimport { Container, Typography, Box, Grid, TextField } from \"@material-ui/core\";\r\nimport CardEmpresa from \"../components/CardEmpresa\";\r\nimport { Add } from \"@material-ui/icons\";\r\nimport { SuccessButton, ErrorButton } from \"../components/Buttons\";\r\nimport Modal from \"../components/Modal\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Axios from \"axios\";\r\nimport { useModal } from \"../Context/modal-context\";\r\nimport { useUser } from \"../Context/user-context\";\r\nimport Swal from \"sweetalert2\";\r\nfunction Empresas() {\r\n  const { logOut } = useUser();\r\n  const { setLoading } = useModal();\r\n  const [empresas, setEmpresas] = useState([]);\r\n  const [openModal, setOpenModal] = useState(false);\r\n  const [empresa, setEmpresa] = useState(\"\");\r\n  const [term, setTerm] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    async function initialEmpresas() {\r\n      const { data } = await Axios.get(\"/empresa\");\r\n      return data;\r\n    }\r\n    setLoading(true);\r\n    initialEmpresas()\r\n      .then((empresas) => {\r\n        setEmpresas(empresas);\r\n      })\r\n      .catch(() => {\r\n        logOut();\r\n      })\r\n      .finally(() => {\r\n        setLoading(false);\r\n      });\r\n  }, [setLoading, logOut]);\r\n\r\n  const handleSearchFilter = (cliente) => {\r\n    return function (x) {\r\n      return x.noCliente == cliente || !cliente;\r\n    };\r\n  };\r\n\r\n  const handleEliminarEmpresa = async (empresaId) => {\r\n    Swal.fire({\r\n      icon: \"question\",\r\n      title: \"Â¿Deseas eliminar la empresa?\",\r\n      text: \"Si tienes datos con esta empresa se perdera.\",\r\n      showCancelButton: true,\r\n    }).then(({ isConfirmed }) => {\r\n      if (isConfirmed) {\r\n        Swal.fire({\r\n          title: \"Â¿Estas seguro que deseas eliminar la empresa?\",\r\n          icon: \"question\",\r\n          showCancelButton: true,\r\n        }).then(async ({ isConfirmed }) => {\r\n          if (isConfirmed) {\r\n            await Axios.delete(`/empresa/${empresaId}`);\r\n            await Swal.fire({\r\n              title: \"Se ha eliminado\",\r\n              icon: \"success\",\r\n            });\r\n            const newEmpresas = empresas.filter((emp) => emp._id !== empresaId);\r\n            setEmpresas(newEmpresas);\r\n          } else {\r\n            await Swal.fire({\r\n              title: \"No se ha eliminado\",\r\n              icon: \"error\",\r\n            });\r\n          }\r\n        });\r\n      } else {\r\n        Swal.fire({\r\n          title: \"No se ha eliminado\",\r\n          icon: \"error\",\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Box alignItems=\"center\">\r\n        <Typography align=\"center\" variant=\"h4\">\r\n          Lista de Empresas\r\n        </Typography>\r\n        <Box textAlign=\"end\">\r\n          <Link to=\"/empresas/agregar\">\r\n            <SuccessButton startIcon={<Add />}>Agregar</SuccessButton>\r\n          </Link>\r\n        </Box>\r\n        <TextField\r\n          margin=\"normal\"\r\n          variant=\"outlined\"\r\n          helperText=\"Busca el codigo de empresa que tienen en el otro sistema\"\r\n          placeholder=\"Codigo\"\r\n          label=\"Busca por codigo de Empresa\"\r\n          fullWidth\r\n          value={term}\r\n          onChange={(texto) => setTerm(texto.target.value)}\r\n        />\r\n      </Box>\r\n      <Grid container spacing={2}>\r\n        {empresas.filter(handleSearchFilter(term)).map((empresa, index) => (\r\n          <Grid key={index} item xs={12} md={6}>\r\n            <CardEmpresa empresa={empresa} eliminar={handleEliminarEmpresa} />\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Empresas;\r\n","C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\pages\\AgregarUsuarios.jsx",[],"C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\pages\\EditarEmpresa.jsx",[],"C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\pages\\AgregarEmpresa.jsx",[],"C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\pages\\AgregarContactoEmpresa.jsx",[],"C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\pages\\EditarContactoEmpresa.jsx",["208"],"import React, { useEffect, useState } from \"react\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport FormUsuarios from \"../components/FormUsuarios\";\r\nimport Axios from \"axios\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport { useModal } from \"../Context/modal-context\";\r\nimport { useFormik } from \"formik\";\r\nimport { usuario } from \"../Helpers/model\";\r\nfunction EditarContactoEmpresa() {\r\n  const { setLoading } = useModal();\r\n  const history = useHistory();\r\n  const { idUsuario } = useParams();\r\n  const [error, setError] = useState(false);\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      nombre: \"\",\r\n      apellido: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      telefono: \"\",\r\n      tipo_usuario: \"\",\r\n      isTrabajando: false,\r\n    },\r\n    validationSchema: usuario,\r\n    onSubmit: async (usuario) => {\r\n      setLoading(true);\r\n      if (\r\n        usuario.nombre === \"\" ||\r\n        usuario.apellido === \"\" ||\r\n        usuario.email === \"\" ||\r\n        usuario.password === \"\" ||\r\n        usuario.telefono === \"\"\r\n      ) {\r\n        setError(true);\r\n        setLoading(false);\r\n        return;\r\n      }\r\n      usuario.isTrabajando = false;\r\n      usuario.tipo_usuario = \"Cliente\";\r\n      try {\r\n        const { data } = await Axios.get(\r\n          `/empresaContacto/usuario/${idUsuario}`\r\n        );\r\n        await Axios.patch(`/empresaContacto/${data._id}`, usuario);\r\n        history.goBack();\r\n      } catch (error) {\r\n        setError(true);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    },\r\n  });\r\n  useEffect(() => {\r\n    async function initial() {\r\n      const { data } = await Axios.get(`/empresaContacto/usuario/${idUsuario}`);\r\n      return data;\r\n    }\r\n    setLoading(true);\r\n    initial().then((data) => {\r\n      formik.initialValues.nombre = data.usuario.nombre;\r\n      formik.initialValues.apellido = data.usuario.apellido;\r\n      formik.initialValues.email = data.usuario.email;\r\n      formik.initialValues.telefono = data.usuario.telefono;\r\n      formik.initialValues.tipo_usuario = data.usuario.tipo_usuario;\r\n      formik.initialValues.isTrabajando = data.usuario.isTrabajando;\r\n      setLoading(false);\r\n    });\r\n  }, [setLoading, idUsuario]);\r\n\r\n  return (\r\n    <>\r\n      <Typography variant=\"h4\" align=\"center\">\r\n        Contacto\r\n      </Typography>\r\n      <FormUsuarios error={error} formik={formik} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default EditarContactoEmpresa;\r\n","C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\pages\\Areas.jsx",["209","210"],"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Typography,\r\n  Container,\r\n  TextField,\r\n  Grid,\r\n  MenuItem,\r\n} from \"@material-ui/core\";\r\nimport CardArea from \"../components/CardArea\";\r\nimport { SuccessButton, ErrorButton } from \"../components/Buttons\";\r\nimport Modal from \"../components/Modal\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Axios from \"axios\";\r\nimport { useModal } from \"../Context/modal-context\";\r\nimport { useUser } from \"../Context/user-context\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nfunction Areas() {\r\n  const { logOut } = useUser();\r\n  const { setLoading } = useModal();\r\n  const [Empresas, setEmpresas] = useState([]);\r\n  const [Empresa, setEmpresa] = useState(\"\");\r\n\r\n  const [Areas, setAreas] = useState([]);\r\n\r\n  const [buscado, setbuscado] = useState(false);\r\n  const [error, seterror] = useState(false);\r\n\r\n  useEffect(() => {\r\n    async function initialAreas() {\r\n      const { data } = await Axios.get(\"/empresa\");\r\n      return data;\r\n    }\r\n    setLoading(true);\r\n    initialAreas()\r\n      .then((empresas) => {\r\n        setEmpresas(empresas);\r\n      })\r\n      .catch(() => {\r\n        logOut();\r\n      })\r\n      .finally(() => {\r\n        setLoading(false);\r\n      });\r\n  }, [setLoading, logOut]);\r\n\r\n  const handleBuscar = () => {\r\n    if (Empresa === \"\") {\r\n      seterror(true);\r\n      return;\r\n    }\r\n    setbuscado(true);\r\n    setLoading(true);\r\n    Axios.get(`/area?empresa=${Empresa}`).then(({ data }) => {\r\n      setAreas(data);\r\n      setLoading(false);\r\n    });\r\n  };\r\n\r\n  const handleEliminar = (areaId) => {\r\n    Swal.fire({\r\n      icon: \"question\",\r\n      title: \"Â¿Desea eliminar el area?\",\r\n      showCancelButton: true,\r\n    }).then(async ({ isConfirmed }) => {\r\n      if (isConfirmed) {\r\n        await Axios.delete(`/area/${areaId}`);\r\n        await Swal.fire({\r\n          title: \"Se ha borrado el area correctamente\",\r\n          icon: \"success\",\r\n        });\r\n        const newAreas = Areas.filter((area) => area._id !== areaId);\r\n        setAreas(newAreas);\r\n      } else {\r\n        await Swal.fire({\r\n          title: \"No se borro el area\",\r\n          icon: \"error\",\r\n        });\r\n      }\r\n    });\r\n  };\r\n  return (\r\n    <Container>\r\n      <Typography align=\"center\" variant=\"h4\" component=\"h1\" gutterBottom>\r\n        Areas\r\n      </Typography>\r\n      <Grid alignItems=\"center\" justify=\"center\" container>\r\n        <Grid xs={12} item md={10}>\r\n          <TextField\r\n            fullWidth\r\n            select\r\n            label=\"Empresa\"\r\n            helperText=\"Selecciona el nombre de la empresa o cliente\"\r\n            error={error}\r\n            value={Empresa}\r\n            onChange={(e) => setEmpresa(e.target.value)}\r\n          >\r\n            {Empresas.map((option, index) => (\r\n              <MenuItem key={index} value={option._id}>\r\n                {option.nombre}\r\n              </MenuItem>\r\n            ))}\r\n          </TextField>\r\n        </Grid>\r\n        <Grid xs={12} item md={2}>\r\n          <SuccessButton onClick={handleBuscar} fullWidth>\r\n            Buscar\r\n          </SuccessButton>\r\n        </Grid>\r\n      </Grid>\r\n      {buscado ? (\r\n        <>\r\n          <Grid container alignItems=\"center\" justify=\"flex-end\">\r\n            <Grid item xs={12} md={2}>\r\n              <Link to={{ pathname: \"/areas/agregar\", state: { Empresa } }}>\r\n                <SuccessButton fullWidth>Agregar</SuccessButton>\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container spacing={2}>\r\n            {Areas.length > 0 ? (\r\n              <>\r\n                {Areas.map((area, index) => (\r\n                  <Grid key={index} item xs={12} md={4}>\r\n                    <CardArea area={area} eliminar={handleEliminar} />\r\n                  </Grid>\r\n                ))}\r\n              </>\r\n            ) : (\r\n              <Typography align=\"center\">No hay areas asignadas</Typography>\r\n            )}\r\n          </Grid>\r\n        </>\r\n      ) : null}\r\n    </Container>\r\n  );\r\n}\r\nexport default Areas;\r\n","C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\pages\\EditarAreas.jsx",[],"C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\pages\\EditarEstacion.jsx",[],"C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\pages\\Estaciones.jsx",["211"],"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  TextField,\r\n  Grid,\r\n  Typography,\r\n  MenuItem,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport { SuccessButton } from \"../components/Buttons\";\r\nimport { Link } from \"react-router-dom\";\r\nimport CardEstacion from \"../components/CardEstacion\";\r\nimport Axios from \"axios\";\r\nimport { useModal } from \"../Context/modal-context\";\r\nimport { useUser } from \"../Context/user-context\";\r\nimport DescripcionEstaciones from \"../components/DescripcionEstaciones\";\r\nimport Swal from \"sweetalert2\";\r\nimport axios from \"axios\";\r\nfunction Estaciones() {\r\n  const { logOut } = useUser();\r\n  const { setLoading } = useModal();\r\n  const [Clientes, setClientes] = useState([]);\r\n  const [Areas, setAreas] = useState([]);\r\n  const [Estaciones, setEstaciones] = useState([]);\r\n  const [buscar, setBuscar] = useState(false);\r\n  const [Cliente, setCliente] = useState(\"\");\r\n  const [Area, setArea] = useState(\"\");\r\n\r\n  const [term, setTerm] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    async function initial() {\r\n      const { data } = await Axios.get(\"/empresa\");\r\n      return data;\r\n    }\r\n    setLoading(true);\r\n    initial()\r\n      .then((resp) => {\r\n        setClientes(resp);\r\n      })\r\n      .catch(() => {\r\n        logOut();\r\n      })\r\n      .finally(() => {\r\n        setLoading(false);\r\n      });\r\n  }, [setLoading, logOut]);\r\n\r\n  const handleSearchEstacion = (term) => {\r\n    return function (x) {\r\n      return x.numero == term || !term;\r\n    };\r\n  };\r\n  const handleListAreas = () => {\r\n    if (Cliente === \"\") {\r\n      alert(\"Un espacio vacio\");\r\n      return;\r\n    }\r\n    Axios.get(`/area?empresa=${Cliente}`).then(({ data }) => {\r\n      setAreas(data);\r\n    });\r\n  };\r\n  const handleListEstaciones = async () => {\r\n    if (Cliente === \"\" || Area === \"\") {\r\n      alert(\"Espacios Vacios\");\r\n      return;\r\n    }\r\n    setLoading(true);\r\n    const { data } = await Axios.get(\r\n      `/estacion?empresa=${Cliente}&area=${Area}`\r\n    );\r\n    setBuscar(true);\r\n    setEstaciones(data);\r\n    setLoading(false);\r\n  };\r\n  const handleDeleteEstacion = (estacionEliminar) => {\r\n    Swal.fire({\r\n      title: \"Â¿Desea Eliminar la estacion?\",\r\n      icon: \"question\",\r\n      showCancelButton: true,\r\n    }).then(async ({ isConfirmed }) => {\r\n      if (isConfirmed) {\r\n        await Axios.delete(`/estacion/${estacionEliminar}`);\r\n        await Swal.fire({\r\n          title: \"Se elimino correctamente\",\r\n          icon: \"success\",\r\n        });\r\n        const newAreas = Estaciones.filter(\r\n          (estacion) => estacion._id !== estacionEliminar\r\n        );\r\n        setEstaciones(newAreas);\r\n      } else {\r\n        Swal.fire({\r\n          title: \"No se cancelo la estacion\",\r\n          icon: \"error\",\r\n        });\r\n      }\r\n    });\r\n  };\r\n  const handleCambiarEstacion = (estacion) => {\r\n    let options = {};\r\n    Areas.map((area) => {\r\n      return (options[area._id] = area.nombre);\r\n    });\r\n    Swal.fire({\r\n      title: \"Cambiar de area\",\r\n      input: \"select\",\r\n      inputOptions: options,\r\n      inputPlaceholder: \"Selecciona el area\",\r\n      showCancelButton: true,\r\n      inputValidator: (value) => {\r\n        return new Promise((resolve) => {\r\n          if (value === \"\") {\r\n            resolve(\"Selecciona alguna area\");\r\n          } else {\r\n            resolve();\r\n          }\r\n        });\r\n      },\r\n    }).then(async ({ value, isConfirmed }) => {\r\n      if (isConfirmed) {\r\n        if (Area === value) {\r\n          await Swal.fire({\r\n            title: \"La estacion ya pertenece a la estacion que elegiste.\",\r\n            icon: \"question\",\r\n          });\r\n          return;\r\n        }\r\n        estacion.area = value;\r\n        estacion.empresa = estacion.empresa._id;\r\n        await axios.patch(`/estacion/${estacion._id}`, estacion);\r\n        await Swal.fire({\r\n          title: \"Se hizo el movimiento de estacion\",\r\n          icon: \"success\",\r\n        });\r\n        const newEstaciones = Estaciones.filter(\r\n          (est) => est._id !== estacion._id\r\n        );\r\n        setEstaciones(newEstaciones);\r\n      } else {\r\n        Swal.fire({\r\n          icon: \"error\",\r\n          title: \"Se cancelo el movimiento\",\r\n        });\r\n      }\r\n    });\r\n  };\r\n  return (\r\n    <>\r\n      <Typography align=\"center\" variant=\"h4\" component=\"h1\" gutterBottom>\r\n        Estaciones\r\n      </Typography>\r\n      <Grid container spacing={1}>\r\n        <Grid item xs={12} md={10}>\r\n          <TextField\r\n            fullWidth\r\n            select\r\n            label=\"Empresa\"\r\n            helperText=\"Selecciona el nombre de la empresa o cliente\"\r\n            value={Cliente}\r\n            onChange={(e) => {\r\n              setAreas([]);\r\n              setBuscar(false);\r\n              setCliente(e.target.value);\r\n            }}\r\n          >\r\n            {Clientes.map((option, index) => (\r\n              <MenuItem key={index} value={option._id}>\r\n                {option.nombre}\r\n              </MenuItem>\r\n            ))}\r\n          </TextField>\r\n        </Grid>\r\n        <Grid item xs={12} md={2}>\r\n          <SuccessButton fullWidth onClick={handleListAreas}>\r\n            Buscar\r\n          </SuccessButton>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      {Areas.length > 0 && (\r\n        <Grid container spacing={1}>\r\n          <Grid item xs={12} md={10}>\r\n            <TextField\r\n              fullWidth\r\n              select\r\n              label=\"Area\"\r\n              helperText=\"Selecciona el nombre del area para ver lista de estaciones\"\r\n              value={Area}\r\n              onChange={(e) => {\r\n                setBuscar(false);\r\n                setArea(e.target.value);\r\n              }}\r\n            >\r\n              {Areas.map((option, index) => (\r\n                <MenuItem key={index} value={option._id}>\r\n                  {option.nombre}\r\n                </MenuItem>\r\n              ))}\r\n            </TextField>\r\n          </Grid>\r\n          <Grid item xs={12} md={2}>\r\n            <SuccessButton onClick={handleListEstaciones} fullWidth>\r\n              Buscar\r\n            </SuccessButton>\r\n          </Grid>\r\n        </Grid>\r\n      )}\r\n      {buscar && (\r\n        <>\r\n          <Link\r\n            to={{\r\n              pathname: \"/estaciones/agregar\",\r\n              state: { Empresa: Cliente, Area },\r\n            }}\r\n          >\r\n            <SuccessButton fullWidth>Agregar</SuccessButton>\r\n          </Link>\r\n          <br />\r\n          <br />\r\n          <Grid container spacing={5}>\r\n            {Estaciones.length > 0 ? (\r\n              <>\r\n                <Grid item xs={12}>\r\n                  <Link to={`/QRList/${Cliente}/${Area}`}>\r\n                    <Button variant=\"outlined\" color=\"primary\" fullWidth>\r\n                      Generar PDF de QR's\r\n                    </Button>\r\n                  </Link>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <Typography align=\"center\" variant=\"h5\" gutterBottom>\r\n                    Lista de estaciones\r\n                  </Typography>\r\n                </Grid>\r\n                <DescripcionEstaciones estaciones={Estaciones} />\r\n                <TextField\r\n                  margin=\"normal\"\r\n                  variant=\"outlined\"\r\n                  helperText=\"Busca por numero de estacion\"\r\n                  placeholder=\"Numero de dispositivo\"\r\n                  label=\"Busca por numero de estacion\"\r\n                  fullWidth\r\n                  value={term}\r\n                  onChange={(texto) => setTerm(texto.target.value)}\r\n                />\r\n                {Estaciones.filter(handleSearchEstacion(term)).map(\r\n                  (estacion, index) => (\r\n                    <Grid key={index} item xs={12} md={6}>\r\n                      <CardEstacion\r\n                        eliminar={handleDeleteEstacion}\r\n                        estacion={estacion}\r\n                        cambiar={handleCambiarEstacion}\r\n                      />\r\n                    </Grid>\r\n                  )\r\n                )}\r\n              </>\r\n            ) : (\r\n              <Grid container justify=\"center\" style={{ marginTop: 15 }}>\r\n                <Grid item>\r\n                  <Typography variant=\"subtitle2\">\r\n                    No hay ninguna estacion en esta area\r\n                  </Typography>\r\n                </Grid>\r\n              </Grid>\r\n            )}\r\n          </Grid>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Estaciones;\r\n","C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\pages\\ContactoEmpresa.jsx",[],"C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\pages\\AgregarAreas.jsx",[],"C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\pages\\AgregarEstacion.jsx",[],"C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\pages\\QRList.jsx",[],"C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\pages\\GraficasAÃ±oArea.jsx",[],"C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\pages\\GraficasMes.jsx",[],"C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\pages\\Graficas.jsx",[],"C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\pages\\Historial.jsx",[],"C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\pages\\Login.jsx",[],"C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\components\\PrivateRoute.jsx",[],"C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\pages\\Cliente.jsx",[],"C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\pages\\GraficasAnual.jsx",[],"C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\components\\Layout.jsx",[],"C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\components\\Buttons.jsx",[],"C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\components\\Modal.jsx",[],"C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\components\\FormUsuarios.jsx",[],"C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\components\\CardEmpresa.jsx",[],"C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\components\\CardArea.jsx",[],"C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\components\\FormEmpresa.jsx",[],"C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\components\\FormEstacion.jsx",[],"C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\components\\CardRevision.jsx",[],"C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\components\\TableRastrero.jsx",[],["212","213"],"C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\components\\TablaVoladores.jsx",[],"C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\components\\ContainerTablaAreaAnual.jsx",[],"C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\components\\CardQR.jsx",[],"C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\components\\CardEstacion.jsx",[],"C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\components\\TableAreaAnualRastrero.jsx",[],"C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\components\\TableAreaAnualVolador.jsx",[],["214","215"],"C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\Helpers\\model.js",[],"C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\components\\DescripcionEstaciones.jsx",[],{"ruleId":"216","replacedBy":"217"},{"ruleId":"218","replacedBy":"219"},{"ruleId":"220","severity":1,"message":"221","line":62,"column":6,"nodeType":"222","endLine":62,"endColumn":17,"suggestions":"223"},{"ruleId":"224","severity":1,"message":"225","line":5,"column":25,"nodeType":"226","messageId":"227","endLine":5,"endColumn":36},{"ruleId":"224","severity":1,"message":"228","line":6,"column":8,"nodeType":"226","messageId":"227","endLine":6,"endColumn":13},{"ruleId":"224","severity":1,"message":"229","line":16,"column":10,"nodeType":"226","messageId":"227","endLine":16,"endColumn":19},{"ruleId":"224","severity":1,"message":"230","line":16,"column":21,"nodeType":"226","messageId":"227","endLine":16,"endColumn":33},{"ruleId":"224","severity":1,"message":"231","line":17,"column":10,"nodeType":"226","messageId":"227","endLine":17,"endColumn":17},{"ruleId":"224","severity":1,"message":"232","line":17,"column":19,"nodeType":"226","messageId":"227","endLine":17,"endColumn":29},{"ruleId":"233","severity":1,"message":"234","line":40,"column":26,"nodeType":"235","messageId":"236","endLine":40,"endColumn":28},{"ruleId":"220","severity":1,"message":"237","line":68,"column":6,"nodeType":"222","endLine":68,"endColumn":29,"suggestions":"238"},{"ruleId":"224","severity":1,"message":"225","line":10,"column":25,"nodeType":"226","messageId":"227","endLine":10,"endColumn":36},{"ruleId":"224","severity":1,"message":"228","line":11,"column":8,"nodeType":"226","messageId":"227","endLine":11,"endColumn":13},{"ruleId":"233","severity":1,"message":"234","line":50,"column":23,"nodeType":"235","messageId":"236","endLine":50,"endColumn":25},{"ruleId":"216","replacedBy":"239"},{"ruleId":"218","replacedBy":"240"},{"ruleId":"216","replacedBy":"241"},{"ruleId":"218","replacedBy":"242"},"no-native-reassign",["243"],"no-negated-in-lhs",["244"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'formik.initialValues' and 'setLoading'. Either include them or remove the dependency array.","ArrayExpression",["245"],"no-unused-vars","'ErrorButton' is defined but never used.","Identifier","unusedVar","'Modal' is defined but never used.","'openModal' is assigned a value but never used.","'setOpenModal' is assigned a value but never used.","'empresa' is assigned a value but never used.","'setEmpresa' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'formik.initialValues'. Either include it or remove the dependency array.",["246"],["243"],["244"],["243"],["244"],"no-global-assign","no-unsafe-negation",{"desc":"247","fix":"248"},{"desc":"249","fix":"250"},"Update the dependencies array to be: [formik.initialValues, idUsuario, setLoading]",{"range":"251","text":"252"},"Update the dependencies array to be: [setLoading, idUsuario, formik.initialValues]",{"range":"253","text":"254"},[1942,1953],"[formik.initialValues, idUsuario, setLoading]",[2201,2224],"[setLoading, idUsuario, formik.initialValues]"]