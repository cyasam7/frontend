[{"C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\index.js":"1","C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\App.js":"2","C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\Helpers\\auth-helpers.js":"3","C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\Context\\user-context.jsx":"4","C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\Context\\modal-context.jsx":"5","C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\pages\\Usuarios.jsx":"6","C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\pages\\EditarUsuarios.jsx":"7","C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\pages\\Empresas.jsx":"8","C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\pages\\AgregarUsuarios.jsx":"9","C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\pages\\EditarEmpresa.jsx":"10","C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\pages\\AgregarEmpresa.jsx":"11","C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\pages\\AgregarContactoEmpresa.jsx":"12","C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\pages\\EditarContactoEmpresa.jsx":"13","C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\pages\\Areas.jsx":"14","C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\pages\\EditarAreas.jsx":"15","C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\pages\\EditarEstacion.jsx":"16","C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\pages\\Estaciones.jsx":"17","C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\pages\\ContactoEmpresa.jsx":"18","C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\pages\\AgregarAreas.jsx":"19","C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\pages\\AgregarEstacion.jsx":"20","C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\pages\\QRList.jsx":"21","C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\pages\\GraficasAÃ±oArea.jsx":"22","C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\pages\\GraficasMes.jsx":"23","C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\pages\\Graficas.jsx":"24","C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\pages\\Historial.jsx":"25","C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\pages\\Login.jsx":"26","C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\components\\PrivateRoute.jsx":"27","C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\pages\\Cliente.jsx":"28","C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\pages\\GraficasAnual.jsx":"29","C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\components\\Layout.jsx":"30","C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\components\\Buttons.jsx":"31","C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\components\\Modal.jsx":"32","C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\components\\FormUsuarios.jsx":"33","C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\components\\CardEmpresa.jsx":"34","C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\components\\CardArea.jsx":"35","C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\components\\FormEmpresa.jsx":"36","C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\components\\FormEstacion.jsx":"37","C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\components\\CardRevision.jsx":"38","C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\components\\TablaVoladores.jsx":"39","C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\components\\ContainerTablaAreaAnual.jsx":"40","C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\components\\CardQR.jsx":"41","C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\components\\CardEstacion.jsx":"42","C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\components\\TableAreaAnualRastrero.jsx":"43","C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\components\\TableAreaAnualVolador.jsx":"44","C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\Helpers\\model.js":"45","C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\components\\DescripcionEstaciones.jsx":"46","C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\pages\\Revision.jsx":"47","C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\pages\\EditarRevision.jsx":"48","C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\components\\TablaRastrero.jsx":"49","C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\components\\TablaRoedores.jsx":"50"},{"size":433,"mtime":1601425391084,"results":"51","hashOfConfig":"52"},{"size":5019,"mtime":1614122235303,"results":"53","hashOfConfig":"52"},{"size":663,"mtime":1615333813042,"results":"54","hashOfConfig":"52"},{"size":2072,"mtime":1602824183685,"results":"55","hashOfConfig":"52"},{"size":820,"mtime":1601428819358,"results":"56","hashOfConfig":"52"},{"size":3824,"mtime":1604032252171,"results":"57","hashOfConfig":"52"},{"size":2206,"mtime":1608582184633,"results":"58","hashOfConfig":"52"},{"size":3420,"mtime":1613448779904,"results":"59","hashOfConfig":"52"},{"size":1671,"mtime":1608581958033,"results":"60","hashOfConfig":"52"},{"size":1401,"mtime":1602728216045,"results":"61","hashOfConfig":"52"},{"size":1037,"mtime":1602728353997,"results":"62","hashOfConfig":"52"},{"size":1868,"mtime":1608582606466,"results":"63","hashOfConfig":"52"},{"size":2450,"mtime":1608595247387,"results":"64","hashOfConfig":"52"},{"size":3949,"mtime":1613448833600,"results":"65","hashOfConfig":"52"},{"size":2035,"mtime":1601429305359,"results":"66","hashOfConfig":"52"},{"size":1564,"mtime":1611172323215,"results":"67","hashOfConfig":"52"},{"size":8399,"mtime":1613262026610,"results":"68","hashOfConfig":"52"},{"size":3795,"mtime":1608595176227,"results":"69","hashOfConfig":"52"},{"size":1697,"mtime":1602728347488,"results":"70","hashOfConfig":"52"},{"size":1033,"mtime":1601428260430,"results":"71","hashOfConfig":"52"},{"size":1606,"mtime":1602031846248,"results":"72","hashOfConfig":"52"},{"size":4260,"mtime":1614293172297,"results":"73","hashOfConfig":"52"},{"size":11693,"mtime":1614294947970,"results":"74","hashOfConfig":"52"},{"size":3039,"mtime":1613448396241,"results":"75","hashOfConfig":"52"},{"size":3222,"mtime":1616008265870,"results":"76","hashOfConfig":"52"},{"size":3763,"mtime":1608581592372,"results":"77","hashOfConfig":"52"},{"size":552,"mtime":1601657687482,"results":"78","hashOfConfig":"52"},{"size":3259,"mtime":1602967329513,"results":"79","hashOfConfig":"52"},{"size":12961,"mtime":1614297844949,"results":"80","hashOfConfig":"52"},{"size":3976,"mtime":1608582247057,"results":"81","hashOfConfig":"52"},{"size":775,"mtime":1600452013541,"results":"82","hashOfConfig":"52"},{"size":345,"mtime":1598481728767,"results":"83","hashOfConfig":"52"},{"size":3901,"mtime":1608594603982,"results":"84","hashOfConfig":"52"},{"size":1447,"mtime":1601351517027,"results":"85","hashOfConfig":"52"},{"size":908,"mtime":1606580978675,"results":"86","hashOfConfig":"52"},{"size":2226,"mtime":1602728145158,"results":"87","hashOfConfig":"52"},{"size":3173,"mtime":1609788138247,"results":"88","hashOfConfig":"52"},{"size":1706,"mtime":1614122631861,"results":"89","hashOfConfig":"52"},{"size":3685,"mtime":1614127641590,"results":"90","hashOfConfig":"52"},{"size":585,"mtime":1614292508977,"results":"91","hashOfConfig":"52"},{"size":534,"mtime":1604082956557,"results":"92","hashOfConfig":"52"},{"size":2667,"mtime":1613258504944,"results":"93","hashOfConfig":"52"},{"size":2878,"mtime":1613096542483,"results":"94","hashOfConfig":"52"},{"size":3248,"mtime":1614124149425,"results":"95","hashOfConfig":"52"},{"size":806,"mtime":1608514230245,"results":"96","hashOfConfig":"52"},{"size":988,"mtime":1612482578043,"results":"97","hashOfConfig":"52"},{"size":1672,"mtime":1615401139597,"results":"98","hashOfConfig":"52"},{"size":160,"mtime":1614119996498,"results":"99","hashOfConfig":"52"},{"size":4417,"mtime":1614127640961,"results":"100","hashOfConfig":"52"},{"size":3304,"mtime":1614127635095,"results":"101","hashOfConfig":"52"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},"ihjww1",{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"104"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"104"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"104"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"104"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"104"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"104"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"195"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"104"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},"C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\index.js",[],["211","212"],"C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\App.js",[],"C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\Helpers\\auth-helpers.js",[],"C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\Context\\user-context.jsx",[],"C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\Context\\modal-context.jsx",[],"C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\pages\\Usuarios.jsx",[],"C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\pages\\EditarUsuarios.jsx",["213"],"import React, { useEffect, useState } from \"react\";\r\nimport { Container, Typography } from \"@material-ui/core\";\r\nimport FormUsuarios from \"../components/FormUsuarios\";\r\nimport Axios from \"axios\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport { useModal } from \"../Context/modal-context\";\r\nimport { useFormik } from \"formik\";\r\nimport { usuario } from \"../Helpers/model\";\r\nfunction EditarUsuario() {\r\n  const history = useHistory();\r\n  const { setLoading } = useModal();\r\n  const { idUsuario } = useParams();\r\n  const [error, setError] = useState(false);\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      nombre: \"\",\r\n      apellido: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      telefono: \"\",\r\n      tipo_usuario: \"\",\r\n      isTrabajando: false,\r\n    },\r\n    validationSchema: usuario,\r\n    onSubmit: async (data) => {\r\n      if (\r\n        data.nombre === \"\" ||\r\n        data.apellido === \"\" ||\r\n        data.email === \"\" ||\r\n        data.password === \"\" ||\r\n        data.telefono === \"\"\r\n      ) {\r\n        setError(true);\r\n        setLoading(false);\r\n        return;\r\n      }\r\n      try {\r\n        await Axios.patch(`/usuarios/${idUsuario}`, data);\r\n        history.goBack();\r\n      } catch (error) {\r\n        setError(true);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    },\r\n  });\r\n  useEffect(() => {\r\n    const buscarUsuario = async () => {\r\n      const { data } = await Axios.get(`/usuarios/${idUsuario}`);\r\n      return data;\r\n    };\r\n    setLoading(true);\r\n    buscarUsuario().then((usuario) => {\r\n      formik.initialValues.nombre = usuario.nombre;\r\n      formik.initialValues.apellido = usuario.apellido;\r\n      formik.initialValues.email = usuario.email;\r\n      formik.initialValues.telefono = usuario.telefono;\r\n      formik.initialValues.tipo_usuario = usuario.tipo_usuario;\r\n      formik.initialValues.isTrabajando = usuario.isTrabajando;\r\n      setLoading(false);\r\n    });\r\n  }, [idUsuario]);\r\n  return (\r\n    <Container>\r\n      <Typography variant=\"h4\" align=\"center\" gutterBottom>\r\n        Editar Usuario\r\n      </Typography>\r\n      <FormUsuarios error={error} formik={formik} />\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default EditarUsuario;\r\n","C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\pages\\Empresas.jsx",["214"],"import React, { useEffect, useState } from \"react\";\r\nimport { Container, Typography, Box, Grid, TextField } from \"@material-ui/core\";\r\nimport CardEmpresa from \"../components/CardEmpresa\";\r\nimport { Add } from \"@material-ui/icons\";\r\nimport { SuccessButton } from \"../components/Buttons\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Axios from \"axios\";\r\nimport { useModal } from \"../Context/modal-context\";\r\nimport { useUser } from \"../Context/user-context\";\r\nimport Swal from \"sweetalert2\";\r\nfunction Empresas() {\r\n  const { logOut } = useUser();\r\n  const { setLoading } = useModal();\r\n  const [empresas, setEmpresas] = useState([]);\r\n  const [term, setTerm] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    async function initialEmpresas() {\r\n      const { data } = await Axios.get(\"/empresa\");\r\n      return data;\r\n    }\r\n    setLoading(true);\r\n    initialEmpresas()\r\n      .then((empresas) => {\r\n        setEmpresas(empresas);\r\n      })\r\n      .catch(() => {\r\n        logOut();\r\n      })\r\n      .finally(() => {\r\n        setLoading(false);\r\n      });\r\n  }, [setLoading, logOut]);\r\n\r\n  const handleSearchFilter = (cliente) => {\r\n    return function (x) {\r\n      return x.noCliente == cliente || !cliente;\r\n    };\r\n  };\r\n\r\n  const handleEliminarEmpresa = async (empresaId) => {\r\n    Swal.fire({\r\n      icon: \"question\",\r\n      title: \"Â¿Deseas eliminar la empresa?\",\r\n      text: \"Si tienes datos con esta empresa se perdera.\",\r\n      showCancelButton: true,\r\n    }).then(({ isConfirmed }) => {\r\n      if (isConfirmed) {\r\n        Swal.fire({\r\n          title: \"Â¿Estas seguro que deseas eliminar la empresa?\",\r\n          icon: \"question\",\r\n          showCancelButton: true,\r\n        }).then(async ({ isConfirmed }) => {\r\n          if (isConfirmed) {\r\n            await Axios.delete(`/empresa/${empresaId}`);\r\n            await Swal.fire({\r\n              title: \"Se ha eliminado\",\r\n              icon: \"success\",\r\n            });\r\n            const newEmpresas = empresas.filter((emp) => emp._id !== empresaId);\r\n            setEmpresas(newEmpresas);\r\n          } else {\r\n            await Swal.fire({\r\n              title: \"No se ha eliminado\",\r\n              icon: \"error\",\r\n            });\r\n          }\r\n        });\r\n      } else {\r\n        Swal.fire({\r\n          title: \"No se ha eliminado\",\r\n          icon: \"error\",\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Box alignItems=\"center\">\r\n        <Typography align=\"center\" variant=\"h4\">\r\n          Lista de Empresas\r\n        </Typography>\r\n        <Box textAlign=\"end\">\r\n          <Link to=\"/empresas/agregar\">\r\n            <SuccessButton startIcon={<Add />}>Agregar</SuccessButton>\r\n          </Link>\r\n        </Box>\r\n        <TextField\r\n          margin=\"normal\"\r\n          variant=\"outlined\"\r\n          helperText=\"Busca el codigo de empresa que tienen en el otro sistema\"\r\n          placeholder=\"Codigo\"\r\n          label=\"Busca por codigo de Empresa\"\r\n          fullWidth\r\n          value={term}\r\n          onChange={(texto) => setTerm(texto.target.value)}\r\n        />\r\n      </Box>\r\n      <Grid container spacing={2}>\r\n        {empresas.filter(handleSearchFilter(term)).map((empresa, index) => (\r\n          <Grid key={index} item xs={12} md={6}>\r\n            <CardEmpresa empresa={empresa} eliminar={handleEliminarEmpresa} />\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Empresas;\r\n","C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\pages\\AgregarUsuarios.jsx",[],"C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\pages\\EditarEmpresa.jsx",[],"C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\pages\\AgregarEmpresa.jsx",[],"C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\pages\\AgregarContactoEmpresa.jsx",[],"C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\pages\\EditarContactoEmpresa.jsx",["215"],"import React, { useEffect, useState } from \"react\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport FormUsuarios from \"../components/FormUsuarios\";\r\nimport Axios from \"axios\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport { useModal } from \"../Context/modal-context\";\r\nimport { useFormik } from \"formik\";\r\nimport { usuario } from \"../Helpers/model\";\r\nfunction EditarContactoEmpresa() {\r\n  const { setLoading } = useModal();\r\n  const history = useHistory();\r\n  const { idUsuario } = useParams();\r\n  const [error, setError] = useState(false);\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      nombre: \"\",\r\n      apellido: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      telefono: \"\",\r\n      tipo_usuario: \"\",\r\n      isTrabajando: false,\r\n    },\r\n    validationSchema: usuario,\r\n    onSubmit: async (usuario) => {\r\n      setLoading(true);\r\n      if (\r\n        usuario.nombre === \"\" ||\r\n        usuario.apellido === \"\" ||\r\n        usuario.email === \"\" ||\r\n        usuario.password === \"\" ||\r\n        usuario.telefono === \"\"\r\n      ) {\r\n        setError(true);\r\n        setLoading(false);\r\n        return;\r\n      }\r\n      usuario.isTrabajando = false;\r\n      usuario.tipo_usuario = \"Cliente\";\r\n      try {\r\n        const { data } = await Axios.get(\r\n          `/empresaContacto/usuario/${idUsuario}`\r\n        );\r\n        await Axios.patch(`/empresaContacto/${data._id}`, usuario);\r\n        history.goBack();\r\n      } catch (error) {\r\n        setError(true);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    },\r\n  });\r\n  useEffect(() => {\r\n    async function initial() {\r\n      const { data } = await Axios.get(`/empresaContacto/usuario/${idUsuario}`);\r\n      return data;\r\n    }\r\n    setLoading(true);\r\n    initial().then((data) => {\r\n      formik.initialValues.nombre = data.usuario.nombre;\r\n      formik.initialValues.apellido = data.usuario.apellido;\r\n      formik.initialValues.email = data.usuario.email;\r\n      formik.initialValues.telefono = data.usuario.telefono;\r\n      formik.initialValues.tipo_usuario = data.usuario.tipo_usuario;\r\n      formik.initialValues.isTrabajando = data.usuario.isTrabajando;\r\n      setLoading(false);\r\n    });\r\n  }, [setLoading, idUsuario]);\r\n\r\n  return (\r\n    <>\r\n      <Typography variant=\"h4\" align=\"center\">\r\n        Contacto\r\n      </Typography>\r\n      <FormUsuarios error={error} formik={formik} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default EditarContactoEmpresa;\r\n","C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\pages\\Areas.jsx",[],"C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\pages\\EditarAreas.jsx",[],"C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\pages\\EditarEstacion.jsx",[],"C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\pages\\Estaciones.jsx",["216"],"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  TextField,\r\n  Grid,\r\n  Typography,\r\n  MenuItem,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport { SuccessButton } from \"../components/Buttons\";\r\nimport { Link } from \"react-router-dom\";\r\nimport CardEstacion from \"../components/CardEstacion\";\r\nimport Axios from \"axios\";\r\nimport { useModal } from \"../Context/modal-context\";\r\nimport { useUser } from \"../Context/user-context\";\r\nimport DescripcionEstaciones from \"../components/DescripcionEstaciones\";\r\nimport Swal from \"sweetalert2\";\r\nimport axios from \"axios\";\r\nfunction Estaciones() {\r\n  const { logOut } = useUser();\r\n  const { setLoading } = useModal();\r\n  const [Clientes, setClientes] = useState([]);\r\n  const [Areas, setAreas] = useState([]);\r\n  const [Estaciones, setEstaciones] = useState([]);\r\n  const [buscar, setBuscar] = useState(false);\r\n  const [Cliente, setCliente] = useState(\"\");\r\n  const [Area, setArea] = useState(\"\");\r\n\r\n  const [term, setTerm] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    async function initial() {\r\n      const { data } = await Axios.get(\"/empresa\");\r\n      return data;\r\n    }\r\n    setLoading(true);\r\n    initial()\r\n      .then((resp) => {\r\n        setClientes(resp);\r\n      })\r\n      .catch(() => {\r\n        logOut();\r\n      })\r\n      .finally(() => {\r\n        setLoading(false);\r\n      });\r\n  }, [setLoading, logOut]);\r\n\r\n  const handleSearchEstacion = (term) => {\r\n    return function (x) {\r\n      return x.numero == term || !term;\r\n    };\r\n  };\r\n  const handleListAreas = () => {\r\n    if (Cliente === \"\") {\r\n      alert(\"Un espacio vacio\");\r\n      return;\r\n    }\r\n    Axios.get(`/area?empresa=${Cliente}`).then(({ data }) => {\r\n      setAreas(data);\r\n    });\r\n  };\r\n  const handleListEstaciones = async () => {\r\n    if (Cliente === \"\" || Area === \"\") {\r\n      alert(\"Espacios Vacios\");\r\n      return;\r\n    }\r\n    setLoading(true);\r\n    const { data } = await Axios.get(\r\n      `/estacion?empresa=${Cliente}&area=${Area}`\r\n    );\r\n    setBuscar(true);\r\n    setEstaciones(data);\r\n    setLoading(false);\r\n  };\r\n  const handleDeleteEstacion = (estacionEliminar) => {\r\n    Swal.fire({\r\n      title: \"Â¿Desea Eliminar la estacion?\",\r\n      icon: \"question\",\r\n      showCancelButton: true,\r\n    }).then(async ({ isConfirmed }) => {\r\n      if (isConfirmed) {\r\n        await Axios.delete(`/estacion/${estacionEliminar}`);\r\n        await Swal.fire({\r\n          title: \"Se elimino correctamente\",\r\n          icon: \"success\",\r\n        });\r\n        const newAreas = Estaciones.filter(\r\n          (estacion) => estacion._id !== estacionEliminar\r\n        );\r\n        setEstaciones(newAreas);\r\n      } else {\r\n        Swal.fire({\r\n          title: \"No se cancelo la estacion\",\r\n          icon: \"error\",\r\n        });\r\n      }\r\n    });\r\n  };\r\n  const handleCambiarEstacion = (estacion) => {\r\n    let options = {};\r\n    Areas.map((area) => {\r\n      return (options[area._id] = area.nombre);\r\n    });\r\n    Swal.fire({\r\n      title: \"Cambiar de area\",\r\n      input: \"select\",\r\n      inputOptions: options,\r\n      inputPlaceholder: \"Selecciona el area\",\r\n      showCancelButton: true,\r\n      inputValidator: (value) => {\r\n        return new Promise((resolve) => {\r\n          if (value === \"\") {\r\n            resolve(\"Selecciona alguna area\");\r\n          } else {\r\n            resolve();\r\n          }\r\n        });\r\n      },\r\n    }).then(async ({ value, isConfirmed }) => {\r\n      if (isConfirmed) {\r\n        if (Area === value) {\r\n          await Swal.fire({\r\n            title: \"La estacion ya pertenece a la estacion que elegiste.\",\r\n            icon: \"question\",\r\n          });\r\n          return;\r\n        }\r\n        estacion.area = value;\r\n        estacion.empresa = estacion.empresa._id;\r\n        await axios.patch(`/estacion/${estacion._id}`, estacion);\r\n        await Swal.fire({\r\n          title: \"Se hizo el movimiento de estacion\",\r\n          icon: \"success\",\r\n        });\r\n        const newEstaciones = Estaciones.filter(\r\n          (est) => est._id !== estacion._id\r\n        );\r\n        setEstaciones(newEstaciones);\r\n      } else {\r\n        Swal.fire({\r\n          icon: \"error\",\r\n          title: \"Se cancelo el movimiento\",\r\n        });\r\n      }\r\n    });\r\n  };\r\n  return (\r\n    <>\r\n      <Typography align=\"center\" variant=\"h4\" component=\"h1\" gutterBottom>\r\n        Estaciones\r\n      </Typography>\r\n      <Grid container spacing={1}>\r\n        <Grid item xs={12} md={10}>\r\n          <TextField\r\n            fullWidth\r\n            select\r\n            label=\"Empresa\"\r\n            helperText=\"Selecciona el nombre de la empresa o cliente\"\r\n            value={Cliente}\r\n            onChange={(e) => {\r\n              setAreas([]);\r\n              setBuscar(false);\r\n              setCliente(e.target.value);\r\n            }}\r\n          >\r\n            {Clientes.map((option, index) => (\r\n              <MenuItem key={index} value={option._id}>\r\n                {option.nombre}\r\n              </MenuItem>\r\n            ))}\r\n          </TextField>\r\n        </Grid>\r\n        <Grid item xs={12} md={2}>\r\n          <SuccessButton fullWidth onClick={handleListAreas}>\r\n            Buscar\r\n          </SuccessButton>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      {Areas.length > 0 && (\r\n        <Grid container spacing={1}>\r\n          <Grid item xs={12} md={10}>\r\n            <TextField\r\n              fullWidth\r\n              select\r\n              label=\"Area\"\r\n              helperText=\"Selecciona el nombre del area para ver lista de estaciones\"\r\n              value={Area}\r\n              onChange={(e) => {\r\n                setBuscar(false);\r\n                setArea(e.target.value);\r\n              }}\r\n            >\r\n              {Areas.map((option, index) => (\r\n                <MenuItem key={index} value={option._id}>\r\n                  {option.nombre}\r\n                </MenuItem>\r\n              ))}\r\n            </TextField>\r\n          </Grid>\r\n          <Grid item xs={12} md={2}>\r\n            <SuccessButton onClick={handleListEstaciones} fullWidth>\r\n              Buscar\r\n            </SuccessButton>\r\n          </Grid>\r\n        </Grid>\r\n      )}\r\n      {buscar && (\r\n        <>\r\n          <Link\r\n            to={{\r\n              pathname: \"/estaciones/agregar\",\r\n              state: { Empresa: Cliente, Area },\r\n            }}\r\n          >\r\n            <SuccessButton fullWidth>Agregar</SuccessButton>\r\n          </Link>\r\n          <br />\r\n          <br />\r\n          <Grid container spacing={5}>\r\n            {Estaciones.length > 0 ? (\r\n              <>\r\n                <Grid item xs={12}>\r\n                  <Link to={`/QRList/${Cliente}/${Area}`}>\r\n                    <Button variant=\"outlined\" color=\"primary\" fullWidth>\r\n                      Generar PDF de QR's\r\n                    </Button>\r\n                  </Link>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <Typography align=\"center\" variant=\"h5\" gutterBottom>\r\n                    Lista de estaciones\r\n                  </Typography>\r\n                </Grid>\r\n                <DescripcionEstaciones estaciones={Estaciones} />\r\n                <TextField\r\n                  margin=\"normal\"\r\n                  variant=\"outlined\"\r\n                  helperText=\"Busca por numero de estacion\"\r\n                  placeholder=\"Numero de dispositivo\"\r\n                  label=\"Busca por numero de estacion\"\r\n                  fullWidth\r\n                  value={term}\r\n                  onChange={(texto) => setTerm(texto.target.value)}\r\n                />\r\n                {Estaciones.filter(handleSearchEstacion(term)).map(\r\n                  (estacion, index) => (\r\n                    <Grid key={index} item xs={12} md={6}>\r\n                      <CardEstacion\r\n                        eliminar={handleDeleteEstacion}\r\n                        estacion={estacion}\r\n                        cambiar={handleCambiarEstacion}\r\n                      />\r\n                    </Grid>\r\n                  )\r\n                )}\r\n              </>\r\n            ) : (\r\n              <Grid container justify=\"center\" style={{ marginTop: 15 }}>\r\n                <Grid item>\r\n                  <Typography variant=\"subtitle2\">\r\n                    No hay ninguna estacion en esta area\r\n                  </Typography>\r\n                </Grid>\r\n              </Grid>\r\n            )}\r\n          </Grid>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Estaciones;\r\n","C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\pages\\ContactoEmpresa.jsx",[],"C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\pages\\AgregarAreas.jsx",[],"C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\pages\\AgregarEstacion.jsx",[],"C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\pages\\QRList.jsx",[],"C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\pages\\GraficasAÃ±oArea.jsx",["217"],"import React, { useState } from \"react\";\r\nimport {\r\n  Grid,\r\n  TextField,\r\n  MenuItem,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport { useModal } from \"../Context/modal-context\";\r\nimport { PDFExport } from \"@progress/kendo-react-pdf\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport Axios from \"axios\";\r\nimport ContainerTablaAreaAnual from \"../components/ContainerTablaAreaAnual\";\r\nimport \"chartjs-plugin-datalabels\";\r\nimport Swal from \"sweetalert2\";\r\nfunction GraficasAÃ±oAnual() {\r\n  const { setLoading } = useModal();\r\n  const [revisiones, setRevisiones] = useState([]);\r\n  const { idEmpresa } = useParams();\r\n  const [primerAÃ±o, setPrimerAÃ±o] = useState(\"\");\r\n  const [segundoAÃ±o, setSegundoAÃ±o] = useState(\"\");\r\n  let pdfExportComponent;\r\n  const aÃ±os = [\r\n    \"\",\r\n    \"2019\",\r\n    \"2020\",\r\n    \"2021\",\r\n    \"2022\",\r\n    \"2023\",\r\n    \"2024\",\r\n    \"2025\",\r\n    \"2026\",\r\n    \"2027\",\r\n    \"2028\",\r\n    \"2029\",\r\n    \"2030\",\r\n  ];\r\n  const handleBuscar = async () => {\r\n    if (primerAÃ±o === \"\" || segundoAÃ±o === \"\") {\r\n      Swal.fire({\r\n        icon: \"warning\",\r\n        title: \"Campos vacios\",\r\n      });\r\n      return;\r\n    }if(primerAÃ±o == segundoAÃ±o){\r\n      Swal.fire({\r\n        icon: \"warning\",\r\n        title: \"Campos iguales\",\r\n      });\r\n      return;\r\n    }\r\n    setLoading(true);\r\n    const { data } = await Axios.post(`/graficas/ano/area/${idEmpresa}`, {\r\n      tipo: \"Voladores\",\r\n      primerAÃ±o,\r\n      segundoAÃ±o,\r\n    });\r\n    setLoading(false);\r\n    setRevisiones(data);\r\n  };\r\n  return (\r\n    <>\r\n      <Grid\r\n        container\r\n        justify=\"flex-start\"\r\n        alignItems=\"center\"\r\n        spacing={2}\r\n        style={{ marginBottom: 7 }}\r\n      >\r\n        <Grid item xs={12} md={4}>\r\n          <TextField\r\n            select\r\n            label=\"Primer aÃ±o\"\r\n            value={primerAÃ±o}\r\n            onChange={(e) => {\r\n              setRevisiones([]);\r\n              setPrimerAÃ±o(e.target.value);\r\n            }}\r\n            helperText=\"Seleccione el primer aÃ±o\"\r\n          >\r\n            {aÃ±os.map((option, index) => (\r\n              <MenuItem key={index} value={option}>\r\n                {option}\r\n              </MenuItem>\r\n            ))}\r\n          </TextField>\r\n        </Grid>\r\n        <Grid item xs={12} md={4}>\r\n          <TextField\r\n            select\r\n            label=\"Segundo aÃ±o\"\r\n            value={segundoAÃ±o}\r\n            onChange={(e) => {\r\n              setRevisiones([]);\r\n              setSegundoAÃ±o(e.target.value);\r\n            }}\r\n            helperText=\"Seleccione el segundo aÃ±o\"\r\n          >\r\n            {aÃ±os.map((option, index) => (\r\n              <MenuItem key={index} value={option}>\r\n                {option}\r\n              </MenuItem>\r\n            ))}\r\n          </TextField>\r\n        </Grid>\r\n        <Grid item xs={12} md={4}>\r\n          <Button\r\n            onClick={handleBuscar}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            fullWidth\r\n          >\r\n            Aceptar\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid container>\r\n        <Grid container justify=\"center\">\r\n          {revisiones.length > 0 && (\r\n            <>\r\n              <Grid item xs={12}>\r\n                <Button\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  color=\"primary\"\r\n                  onClick={() => pdfExportComponent.save()}\r\n                >\r\n                  Generar archivo\r\n                </Button>\r\n              </Grid>\r\n\r\n              <Grid item xs={12} md={12} lg={10} xl={8}>\r\n                <PDFExport\r\n                  paperSize=\"letter\"\r\n                  margin={{left: \"1cm\", right: \"1cm\", bottom:\"5mm\"}}\r\n                  scale={0.5}\r\n                  fileName={`reporte-anual-por-areas-voladores`}\r\n                  ref={(component) => (pdfExportComponent = component)}\r\n                >\r\n                  <ContainerTablaAreaAnual\r\n                    revision={revisiones}\r\n                    primerAÃ±o={primerAÃ±o}\r\n                    segundoAÃ±o={segundoAÃ±o}\r\n                  />\r\n                </PDFExport>\r\n              </Grid>\r\n            </>\r\n          )}\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default GraficasAÃ±oAnual;\r\n","C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\pages\\GraficasMes.jsx",[],"C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\pages\\Graficas.jsx",[],"C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\pages\\Historial.jsx",[],"C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\pages\\Login.jsx",[],"C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\components\\PrivateRoute.jsx",[],"C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\pages\\Cliente.jsx",[],"C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\pages\\GraficasAnual.jsx",["218","219"],"import React, { useState } from \"react\";\r\nimport { Bar } from \"react-chartjs-2\";\r\nimport {\r\n  Grid,\r\n  TextField,\r\n  Button,\r\n  MenuItem,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { useModal } from \"../Context/modal-context\";\r\nimport { PDFExport } from \"@progress/kendo-react-pdf\";\r\nimport Axios from \"axios\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport \"chartjs-plugin-datalabels\";\r\nimport Swal from \"sweetalert2\";\r\nfunction GraficasAnual() {\r\n  const { idEmpresa } = useParams();\r\n  const [Tipo, setTipo] = useState(\"\");\r\n  const { setLoading } = useModal();\r\n  const [volador, setVolador] = useState(undefined);\r\n  const [labels, setLabels] = useState([]);\r\n  const [abejas, setAbejas] = useState([]);\r\n  const [moscas, setMoscas] = useState([]);\r\n  const [otros, setOtros] = useState([]);\r\n  //--\r\n  const [tijerilla, setTijerilla] = useState([]);\r\n  const [roedor, setRoedor] = useState([]);\r\n  const [frailecillos, setFrailecillos] = useState([]);\r\n  const [mosca, setMosca] = useState([]);\r\n  const [pinacate, setPinacate] = useState([]);\r\n  const [cochinilla, setCochinilla] = useState([]);\r\n  const [cucurachaAmericana, setCucarachaAme] = useState([]);\r\n  const [cucurachaAlemana, setCucarachaAlem] = useState([]);\r\n  const [araÃ±a, setAraÃ±a] = useState([]);\r\n  const [grillo, setGrillo] = useState([]);\r\n  const [hormiga, setHormiga] = useState([]);\r\n  const [ciempies, setCiempies] = useState([]);\r\n  const [alacran, setAlacran] = useState([]);\r\n  const [ver, setVer] = useState(false);\r\n\r\n  const [primerAÃ±o, setPrimerAÃ±o] = useState(\"\");\r\n  const [segundoAÃ±o, setSegundoAÃ±o] = useState(\"\");\r\n  const aÃ±os = [\r\n    \"\",\r\n    \"2019\",\r\n    \"2020\",\r\n    \"2021\",\r\n    \"2022\",\r\n    \"2023\",\r\n    \"2024\",\r\n    \"2025\",\r\n    \"2026\",\r\n    \"2027\",\r\n    \"2028\",\r\n    \"2029\",\r\n    \"2030\",\r\n  ];\r\n  let pdfExportComponent;\r\n  const estations = [\r\n    {\r\n      value: \"Rastreros\",\r\n      label: \"Rastreros\",\r\n    },\r\n    {\r\n      value: \"Voladores\",\r\n      label: \"Voladores\",\r\n    },\r\n  ];\r\n  const data = {\r\n    labels: labels,\r\n    datasets: [\r\n      {\r\n        label: \"Moscas\",\r\n        backgroundColor: \"rgba(255,99,132,.5)\",\r\n        borderColor: \"rgba(255,99,132,1)\",\r\n        borderWidth: 1,\r\n        hoverBorderColor: \"rgba(255,99,132,1)\",\r\n        data: moscas,\r\n      },\r\n      {\r\n        label: \"Abejas\",\r\n        backgroundColor: \"rgba(235, 64, 52,.5)\",\r\n        borderColor: \"rgba(155,231,91,0.2)\",\r\n        borderWidth: 1,\r\n        hoverBorderColor: \"rgba(255,99,132,1)\",\r\n        data: abejas,\r\n      },\r\n    ],\r\n  };\r\n  const dataRastrero = {\r\n    labels: labels,\r\n    datasets: [\r\n      {\r\n        label: \"tijerilla\",\r\n        backgroundColor: \"rgba(255,99,132,0.5)\",\r\n        borderColor: \" rgb(255, 255, 255)\",\r\n        borderWidth: 1,\r\n        hoverBackgroundColor: \"rgba(255,99,132,0.4)\",\r\n        hoverBorderColor: \"rgba(255,99,132,1)\",\r\n        data: tijerilla,\r\n      },\r\n      {\r\n        label: \"roedor\",\r\n        backgroundColor: \"rgba(155,231,91,0.5)\",\r\n        borderColor: \" rgb(255, 255, 255)\",\r\n        borderWidth: 1,\r\n        hoverBackgroundColor: \"rgba(255,99,132,0.4)\",\r\n        hoverBorderColor: \"rgba(255,99,132,1)\",\r\n        data: roedor,\r\n      },\r\n      {\r\n        label: \"frailecillos\",\r\n        backgroundColor: \" rgb(147, 61, 228,0.5)\",\r\n        borderColor: \" rgb(255, 255, 255)\",\r\n        borderWidth: 1,\r\n        hoverBackgroundColor: \"rgba(255,99,132,0.4)\",\r\n        hoverBorderColor: \"rgba(255,99,132,1)\",\r\n        data: frailecillos,\r\n      },\r\n      {\r\n        label: \"mosca\",\r\n        backgroundColor: \" rgb(117, 239, 248,0.5)\",\r\n        borderColor: \" rgb(255, 255, 255))\",\r\n        borderWidth: 1,\r\n        hoverBackgroundColor: \"rgba(255,99,132,0.4)\",\r\n        hoverBorderColor: \"rgba(255,99,132,1)\",\r\n        data: mosca,\r\n      },\r\n      {\r\n        label: \"pinacate\",\r\n        backgroundColor: \" rgb(61, 86, 228,0.5)\",\r\n        borderColor: \" rgb(255, 255, 255)\",\r\n        borderWidth: 1,\r\n        hoverBackgroundColor: \"rgba(255,99,132,0.4)\",\r\n        hoverBorderColor: \"rgba(255,99,132,1)\",\r\n        data: pinacate,\r\n      },\r\n      {\r\n        label: \"cochinilla\",\r\n        backgroundColor: \" rgb(211, 228, 61,0.5)\",\r\n        borderColor: \" rgb(255, 255, 255)\",\r\n        borderWidth: 1,\r\n        hoverBackgroundColor: \"rgba(255,99,132,0.4)\",\r\n        hoverBorderColor: \"rgba(255,99,132,1)\",\r\n        data: cochinilla,\r\n      },\r\n      {\r\n        label: \"cucarachaAmericana\",\r\n        backgroundColor: \" rgb(67, 228, 61,0.5)\",\r\n        borderColor: \" rgb(255, 255, 255)\",\r\n        borderWidth: 1,\r\n        hoverBackgroundColor: \"rgba(255,99,132,0.4)\",\r\n        hoverBorderColor: \"rgba(255,99,132,1)\",\r\n        data: cucurachaAmericana,\r\n      },\r\n      {\r\n        label: \"cucarachaAlemana\",\r\n        backgroundColor: \" rgb(228, 61, 61,0.5)\",\r\n        borderColor: \" rgb(255, 255, 255)\",\r\n        borderWidth: 1,\r\n        hoverBackgroundColor: \"rgba(255,99,132,0.4)\",\r\n        hoverBorderColor: \"rgba(255,99,132,1)\",\r\n        data: cucurachaAlemana,\r\n      },\r\n      {\r\n        label: \"araÃ±a\",\r\n        backgroundColor: \" rgb(228, 61, 186,0.5)\",\r\n        borderColor: \" rgb(255, 255, 255)\",\r\n        borderWidth: 1,\r\n        hoverBackgroundColor: \"rgba(255,99,132,0.4)\",\r\n        hoverBorderColor: \"rgba(255,99,132,1)\",\r\n        data: araÃ±a,\r\n      },\r\n      {\r\n        label: \"hormiga\",\r\n        backgroundColor: \" rgb(195, 61, 228,0.5)\",\r\n        borderColor: \" rgb(255, 255, 255)\",\r\n        borderWidth: 1,\r\n        hoverBackgroundColor: \"rgba(255,99,132,0.4)\",\r\n        hoverBorderColor: \"rgba(255,99,132,1)\",\r\n        data: hormiga,\r\n      },\r\n      {\r\n        label: \"ciempies\",\r\n        backgroundColor: \" rgb(61, 228, 172,0.5)\",\r\n        borderColor: \" rgb(255, 255, 255)\",\r\n        borderWidth: 1,\r\n        hoverBackgroundColor: \"rgba(255,99,132,0.4)\",\r\n        hoverBorderColor: \"rgba(255,99,132,1)\",\r\n        data: ciempies,\r\n      },\r\n      {\r\n        label: \"alacran\",\r\n        backgroundColor: \" rgb(61, 228, 172,0.5)\",\r\n        borderColor: \" rgb(255, 255, 255)\",\r\n        borderWidth: 1,\r\n        hoverBackgroundColor: \"rgba(255,99,132,0.4)\",\r\n        hoverBorderColor: \"rgba(255,99,132,1)\",\r\n        data: alacran,\r\n      },\r\n      {\r\n        label: \"grillo\",\r\n        backgroundColor: \" rgb(228, 183, 61,0.5)\",\r\n        borderColor: \" rgb(255, 255, 255)\",\r\n        borderWidth: 1,\r\n        hoverBackgroundColor: \"rgba(255,99,132,0.4)\",\r\n        hoverBorderColor: \"rgba(255,99,132,1)\",\r\n        data: grillo,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const handleBuscar = async () => {\r\n    if (Tipo === \"\" || primerAÃ±o === \"\" || segundoAÃ±o === \"\") {\r\n      Swal.fire({\r\n        icon: \"warning\",\r\n        title: \"Campos vacios\",\r\n      });\r\n      return;\r\n    }\r\n    if (primerAÃ±o == segundoAÃ±o) {\r\n      Swal.fire({\r\n        icon: \"warning\",\r\n        title: \"Campos iguales\",\r\n      });\r\n      return;\r\n    }\r\n    setLoading(true);\r\n    const { data } = await Axios.post(`/graficas/ano/${idEmpresa}`, {\r\n      tipo: Tipo,\r\n      primerAÃ±o,\r\n      segundoAÃ±o,\r\n    });\r\n    if (Tipo === \"Voladores\") {\r\n      const labels = data.map((area) => {\r\n        return area.aÃ±o;\r\n      });\r\n      const abejas = data.map((area) => {\r\n        return area.abeja;\r\n      });\r\n      const mosca = data.map((area) => {\r\n        return area.mosca;\r\n      });\r\n      const otros = data.map((area) => {\r\n        return area.otros;\r\n      });\r\n      setVolador(true);\r\n      setLabels(labels);\r\n      setAbejas(abejas);\r\n      setMoscas(mosca);\r\n      setOtros(otros);\r\n    } else {\r\n      const labels = data.map((area) => {\r\n        return area.aÃ±o;\r\n      });\r\n      const tijerilla = data.map((area) => {\r\n        return area.tijerilla;\r\n      });\r\n      const roedor = data.map((area) => {\r\n        return area.roedor;\r\n      });\r\n      const frailecillos = data.map((area) => {\r\n        return area.frailecillos;\r\n      });\r\n      const mosca = data.map((area) => {\r\n        return area.mosca;\r\n      });\r\n      const pinacate = data.map((area) => {\r\n        return area.pinacate;\r\n      });\r\n      const cochinilla = data.map((area) => {\r\n        return area.cochinilla;\r\n      });\r\n      const cucarachaAmericana = data.map((area) => {\r\n        return area.cucarachaAmericana;\r\n      });\r\n      const cucarachaAlemana = data.map((area) => {\r\n        return area.cucarachaAlemana;\r\n      });\r\n      const araÃ±a = data.map((area) => {\r\n        return area.araÃ±a;\r\n      });\r\n      const grillo = data.map((area) => {\r\n        return area.grillo;\r\n      });\r\n      const hormiga = data.map((area) => {\r\n        return area.hormiga;\r\n      });\r\n      const ciempies = data.map((area) => {\r\n        return area.ciempies;\r\n      });\r\n      const alacran = data.map((area) => {\r\n        return area.alacran;\r\n      });\r\n\r\n      setLabels(labels);\r\n      setVolador(false);\r\n      setTijerilla(tijerilla);\r\n      setRoedor(roedor);\r\n      setFrailecillos(frailecillos);\r\n      setMosca(mosca);\r\n      setPinacate(pinacate);\r\n      setCochinilla(cochinilla);\r\n      setCucarachaAme(cucarachaAmericana);\r\n      setCucarachaAlem(cucarachaAlemana);\r\n      setAraÃ±a(araÃ±a);\r\n      setGrillo(grillo);\r\n      setHormiga(hormiga);\r\n      setCiempies(ciempies);\r\n      setAlacran(alacran);\r\n    }\r\n    setVer(true);\r\n    setLoading(false);\r\n  };\r\n  return (\r\n    <>\r\n      <Grid\r\n        container\r\n        spacing={2}\r\n        alignItems=\"center\"\r\n        style={{ marginBottom: 15 }}\r\n      >\r\n        <Grid item md={4}>\r\n          <TextField\r\n            fullWidth\r\n            select\r\n            label=\"Selecciona\"\r\n            value={Tipo}\r\n            onChange={(e) => setTipo(e.target.value)}\r\n            helperText=\"Seleccione tipo de estacion\"\r\n          >\r\n            {estations.map((option, index) => (\r\n              <MenuItem key={index} value={option.value}>\r\n                {option.label}\r\n              </MenuItem>\r\n            ))}\r\n          </TextField>\r\n        </Grid>\r\n        <Grid item xs={12} md={4}>\r\n          <TextField\r\n            select\r\n            label=\"Primer aÃ±o\"\r\n            value={primerAÃ±o}\r\n            onChange={(e) => {\r\n              setVer(false);\r\n              setPrimerAÃ±o(e.target.value);\r\n            }}\r\n            helperText=\"Seleccione el primer aÃ±o\"\r\n          >\r\n            {aÃ±os.map((option, index) => (\r\n              <MenuItem key={index} value={option}>\r\n                {option}\r\n              </MenuItem>\r\n            ))}\r\n          </TextField>\r\n        </Grid>\r\n        <Grid item xs={12} md={4}>\r\n          <TextField\r\n            select\r\n            label=\"Segundo aÃ±o\"\r\n            value={segundoAÃ±o}\r\n            onChange={(e) => {\r\n              setVer(false);\r\n              setSegundoAÃ±o(e.target.value);\r\n            }}\r\n            helperText=\"Seleccione el segundo aÃ±o\"\r\n          >\r\n            {aÃ±os.map((option, index) => (\r\n              <MenuItem key={index} value={option}>\r\n                {option}\r\n              </MenuItem>\r\n            ))}\r\n          </TextField>\r\n        </Grid>\r\n        <Grid item md={2}>\r\n          <Button\r\n            fullWidth\r\n            onClick={handleBuscar}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n          >\r\n            Aceptar\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n      <br />\r\n      {ver ? (\r\n        <>\r\n          <Grid container>\r\n            <Grid item xs={12}>\r\n              <Button\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                color=\"primary\"\r\n                onClick={() => {\r\n                  pdfExportComponent.save();\r\n                }}\r\n              >\r\n                Generar archivo\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <PDFExport\r\n            paperSize=\"letter\"\r\n            scale={0.7}\r\n            margin=\"1cm\"\r\n            fileName={`${volador ? \"Voladores\" : \"Rastreros\"}-aÃ±os`}\r\n            landscape={true}\r\n            ref={(component) => (pdfExportComponent = component)}\r\n          >\r\n            <Grid container justify=\"center\">\r\n              <Grid item>\r\n                <Typography variant=\"subtitle1\" gutterBottom>\r\n                  {`Graficas Anual de ${Tipo}`}\r\n                </Typography>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid container>\r\n              <Grid item xs={12} lg={10}>\r\n                <Bar\r\n                  plugins={{\r\n                    datalabels: {\r\n                      display: (ctx) => {\r\n                        return true;\r\n                      },\r\n                      formatter: (ctx, data) => {\r\n                        return `${data.dataIndex}`;\r\n                      },\r\n                    },\r\n                  }}\r\n                  data={volador ? data : dataRastrero}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </PDFExport>\r\n        </>\r\n      ) : null}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default GraficasAnual;\r\n","C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\components\\Layout.jsx",[],"C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\components\\Buttons.jsx",[],"C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\components\\Modal.jsx",[],"C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\components\\FormUsuarios.jsx",[],"C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\components\\CardEmpresa.jsx",[],"C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\components\\CardArea.jsx",[],"C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\components\\FormEmpresa.jsx",[],"C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\components\\FormEstacion.jsx",[],"C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\components\\CardRevision.jsx",[],"C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\components\\TablaVoladores.jsx",[],"C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\components\\ContainerTablaAreaAnual.jsx",[],"C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\components\\CardQR.jsx",[],"C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\components\\CardEstacion.jsx",[],"C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\components\\TableAreaAnualRastrero.jsx",[],["220","221"],"C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\components\\TableAreaAnualVolador.jsx",["222","223","224","225","226","227","228"],"import React from \"react\";\r\nimport {\r\n  Grid,\r\n  Table,\r\n  TableContainer,\r\n  TableHead,\r\n  TableBody,\r\n  TableCell,\r\n  TableRow,\r\n  Typography,\r\n  Paper,\r\n} from \"@material-ui/core\";\r\nimport { Bar } from \"react-chartjs-2\";\r\n\r\nfunction TableAreaAnual({ area }) {\r\n  const data = {\r\n    labels: area.aÃ±o\r\n      .map((aÃ±o) => aÃ±o.mes.map((mes) => `${mes.mes} ${aÃ±o.aÃ±o}`))\r\n      .flat(),\r\n    datasets: [\r\n      {\r\n        label: \"Abejas\",\r\n        backgroundColor: \"rgba(25,99,132,.5)\",\r\n        borderColor: \"rgba(255,99,132,1)\",\r\n        hoverBorderColor: \"rgba(255,99,132,1)\",\r\n        data: area.aÃ±o\r\n          .map((aÃ±o) => aÃ±o.mes.map((mes) => mes.total.abejas))\r\n          .flat(),\r\n      },\r\n      {\r\n        label: \"Moscas\",\r\n        backgroundColor: \"rgba(235, 64, 52,.5)\",\r\n        borderColor: \"rgba(155,231,91,0.2)\",\r\n        hoverBorderColor: \"rgba(255,99,132,1)\",\r\n        data: area.aÃ±o\r\n          .map((aÃ±o) => aÃ±o.mes.map((mes) => mes.total.moscas))\r\n          .flat(),\r\n        fill: false,\r\n      },\r\n    ],\r\n  };\r\n  return (\r\n    <>\r\n      <Typography variant=\"h6\" gutterBottom>\r\n        {area.area}\r\n      </Typography>\r\n      {/* <Grid container>\r\n        <Grid item xs={12}>\r\n          <TableContainer component={Paper} style={{ marginBottom: 15 }}>\r\n            <Table size=\"small\" aria-label=\"a dense table\">\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell align=\"center\" colSpan={3}>\r\n                    {area.area.toUpperCase()}\r\n                  </TableCell>\r\n                </TableRow>\r\n                <TableRow>\r\n                  <TableCell>X</TableCell>\r\n                  {aÃ±o.aÃ±o[0].mes\r\n                    .map((mes, index) => (\r\n                      <TableCell key={index}>{mes.mes}</TableCell>\r\n                    ))\r\n                    .reverse()}\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {aÃ±o.aÃ±o.map((aÃ±o, index) => {\r\n                  return (\r\n                    <TableRow key={index}>\r\n                      <TableCell>{aÃ±o.aÃ±o}</TableCell>\r\n                      {aÃ±o.mes\r\n                        .map((mes, index) => (\r\n                          <TableCell key={index}>\r\n                            {\" \"}\r\n                            {mes.total[titulo]}\r\n                          </TableCell>\r\n                        ))\r\n                        .reverse()}\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        </Grid>\r\n      </Grid> */}\r\n      <Grid container>\r\n        <Grid item xs={12} md={12} lg={10} xl={8}>\r\n          <Bar\r\n            plugins={{\r\n              datalabels: {\r\n                display: (ctx) => {\r\n                  return true;\r\n                },\r\n                formatter: (ctx, data) => {\r\n                  return `${data.dataIndex}`;\r\n                },\r\n              },\r\n            }}\r\n            data={data}\r\n            options={{ responsive: true, maintainAspectRatio: true }}\r\n            height={176}\r\n            width={500}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default TableAreaAnual;\r\n","C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\Helpers\\model.js",[],"C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\components\\DescripcionEstaciones.jsx",[],"C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\pages\\Revision.jsx",["229","230","231"],"C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\pages\\EditarRevision.jsx",[],"C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\components\\TablaRastrero.jsx",[],"C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\components\\TablaRoedores.jsx",[],{"ruleId":"232","replacedBy":"233"},{"ruleId":"234","replacedBy":"235"},{"ruleId":"236","severity":1,"message":"237","line":62,"column":6,"nodeType":"238","endLine":62,"endColumn":17,"suggestions":"239"},{"ruleId":"240","severity":1,"message":"241","line":37,"column":26,"nodeType":"242","messageId":"243","endLine":37,"endColumn":28},{"ruleId":"236","severity":1,"message":"244","line":68,"column":6,"nodeType":"238","endLine":68,"endColumn":29,"suggestions":"245"},{"ruleId":"240","severity":1,"message":"241","line":50,"column":23,"nodeType":"242","messageId":"243","endLine":50,"endColumn":25},{"ruleId":"240","severity":1,"message":"241","line":44,"column":19,"nodeType":"242","messageId":"243","endLine":44,"endColumn":21},{"ruleId":"246","severity":1,"message":"247","line":24,"column":10,"nodeType":"248","messageId":"249","endLine":24,"endColumn":15},{"ruleId":"240","severity":1,"message":"241","line":221,"column":19,"nodeType":"242","messageId":"243","endLine":221,"endColumn":21},{"ruleId":"232","replacedBy":"250"},{"ruleId":"234","replacedBy":"251"},{"ruleId":"246","severity":1,"message":"252","line":4,"column":3,"nodeType":"248","messageId":"249","endLine":4,"endColumn":8},{"ruleId":"246","severity":1,"message":"253","line":5,"column":3,"nodeType":"248","messageId":"249","endLine":5,"endColumn":17},{"ruleId":"246","severity":1,"message":"254","line":6,"column":3,"nodeType":"248","messageId":"249","endLine":6,"endColumn":12},{"ruleId":"246","severity":1,"message":"255","line":7,"column":3,"nodeType":"248","messageId":"249","endLine":7,"endColumn":12},{"ruleId":"246","severity":1,"message":"256","line":8,"column":3,"nodeType":"248","messageId":"249","endLine":8,"endColumn":12},{"ruleId":"246","severity":1,"message":"257","line":9,"column":3,"nodeType":"248","messageId":"249","endLine":9,"endColumn":11},{"ruleId":"246","severity":1,"message":"258","line":11,"column":3,"nodeType":"248","messageId":"249","endLine":11,"endColumn":8},{"ruleId":"246","severity":1,"message":"259","line":1,"column":42,"nodeType":"248","messageId":"249","endLine":1,"endColumn":52},{"ruleId":"246","severity":1,"message":"260","line":12,"column":10,"nodeType":"248","messageId":"249","endLine":12,"endColumn":14},{"ruleId":"246","severity":1,"message":"261","line":12,"column":16,"nodeType":"248","messageId":"249","endLine":12,"endColumn":23},"no-native-reassign",["262"],"no-negated-in-lhs",["263"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'formik.initialValues' and 'setLoading'. Either include them or remove the dependency array.","ArrayExpression",["264"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'formik.initialValues'. Either include it or remove the dependency array.",["265"],"no-unused-vars","'otros' is assigned a value but never used.","Identifier","unusedVar",["262"],["263"],"'Table' is defined but never used.","'TableContainer' is defined but never used.","'TableHead' is defined but never used.","'TableBody' is defined but never used.","'TableCell' is defined but never used.","'TableRow' is defined but never used.","'Paper' is defined but never used.","'Typography' is defined but never used.","'Tipo' is assigned a value but never used.","'setTipo' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"266","fix":"267"},{"desc":"268","fix":"269"},"Update the dependencies array to be: [formik.initialValues, idUsuario, setLoading]",{"range":"270","text":"271"},"Update the dependencies array to be: [setLoading, idUsuario, formik.initialValues]",{"range":"272","text":"273"},[1942,1953],"[formik.initialValues, idUsuario, setLoading]",[2201,2224],"[setLoading, idUsuario, formik.initialValues]"]