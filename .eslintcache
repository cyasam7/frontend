[{"C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\index.js":"1","C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\App.js":"2","C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\Helpers\\auth-helpers.js":"3","C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\Context\\user-context.jsx":"4","C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\Context\\modal-context.jsx":"5","C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\pages\\Usuarios.jsx":"6","C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\pages\\EditarUsuarios.jsx":"7","C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\pages\\Empresas.jsx":"8","C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\pages\\AgregarUsuarios.jsx":"9","C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\pages\\EditarEmpresa.jsx":"10","C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\pages\\AgregarEmpresa.jsx":"11","C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\pages\\AgregarContactoEmpresa.jsx":"12","C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\pages\\EditarContactoEmpresa.jsx":"13","C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\pages\\Areas.jsx":"14","C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\pages\\EditarAreas.jsx":"15","C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\pages\\EditarEstacion.jsx":"16","C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\pages\\Estaciones.jsx":"17","C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\pages\\ContactoEmpresa.jsx":"18","C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\pages\\AgregarAreas.jsx":"19","C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\pages\\AgregarEstacion.jsx":"20","C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\pages\\QRList.jsx":"21","C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\pages\\GraficasAÃ±oArea.jsx":"22","C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\pages\\GraficasMes.jsx":"23","C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\pages\\Graficas.jsx":"24","C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\pages\\Historial.jsx":"25","C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\pages\\Login.jsx":"26","C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\components\\PrivateRoute.jsx":"27","C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\pages\\Cliente.jsx":"28","C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\pages\\GraficasAnual.jsx":"29","C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\components\\Layout.jsx":"30","C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\components\\Buttons.jsx":"31","C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\components\\Modal.jsx":"32","C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\components\\FormUsuarios.jsx":"33","C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\components\\CardEmpresa.jsx":"34","C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\components\\CardArea.jsx":"35","C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\components\\FormEmpresa.jsx":"36","C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\components\\FormEstacion.jsx":"37","C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\components\\CardRevision.jsx":"38","C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\components\\TableRastrero.jsx":"39","C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\components\\TablaVoladores.jsx":"40","C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\components\\ContainerTablaAreaAnual.jsx":"41","C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\components\\CardQR.jsx":"42","C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\components\\CardEstacion.jsx":"43","C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\components\\TableAreaAnualRastrero.jsx":"44","C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\components\\TableAreaAnualVolador.jsx":"45","C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\Helpers\\model.js":"46","C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\components\\DescripcionEstaciones.jsx":"47"},{"size":433,"mtime":1601425391084,"results":"48","hashOfConfig":"49"},{"size":4675,"mtime":1612468860485,"results":"50","hashOfConfig":"49"},{"size":663,"mtime":1612482368467,"results":"51","hashOfConfig":"49"},{"size":2072,"mtime":1602824183685,"results":"52","hashOfConfig":"49"},{"size":820,"mtime":1601428819358,"results":"53","hashOfConfig":"49"},{"size":3824,"mtime":1604032252171,"results":"54","hashOfConfig":"49"},{"size":2206,"mtime":1608582184633,"results":"55","hashOfConfig":"49"},{"size":3097,"mtime":1603933824683,"results":"56","hashOfConfig":"49"},{"size":1671,"mtime":1608581958033,"results":"57","hashOfConfig":"49"},{"size":1401,"mtime":1602728216045,"results":"58","hashOfConfig":"49"},{"size":1037,"mtime":1602728353997,"results":"59","hashOfConfig":"49"},{"size":1868,"mtime":1608582606466,"results":"60","hashOfConfig":"49"},{"size":2450,"mtime":1608595247387,"results":"61","hashOfConfig":"49"},{"size":4050,"mtime":1606580974555,"results":"62","hashOfConfig":"49"},{"size":2035,"mtime":1601429305359,"results":"63","hashOfConfig":"49"},{"size":1564,"mtime":1611172323215,"results":"64","hashOfConfig":"49"},{"size":6897,"mtime":1612482616587,"results":"65","hashOfConfig":"49"},{"size":3795,"mtime":1608595176227,"results":"66","hashOfConfig":"49"},{"size":1697,"mtime":1602728347488,"results":"67","hashOfConfig":"49"},{"size":1033,"mtime":1601428260430,"results":"68","hashOfConfig":"49"},{"size":1606,"mtime":1602031846248,"results":"69","hashOfConfig":"49"},{"size":3287,"mtime":1612479439934,"results":"70","hashOfConfig":"49"},{"size":11877,"mtime":1612479923276,"results":"71","hashOfConfig":"49"},{"size":3009,"mtime":1603673181207,"results":"72","hashOfConfig":"49"},{"size":3173,"mtime":1602965031707,"results":"73","hashOfConfig":"49"},{"size":3763,"mtime":1608581592372,"results":"74","hashOfConfig":"49"},{"size":552,"mtime":1601657687482,"results":"75","hashOfConfig":"49"},{"size":3259,"mtime":1602967329513,"results":"76","hashOfConfig":"49"},{"size":11001,"mtime":1602824182957,"results":"77","hashOfConfig":"49"},{"size":3976,"mtime":1608582247057,"results":"78","hashOfConfig":"49"},{"size":775,"mtime":1600452013541,"results":"79","hashOfConfig":"49"},{"size":345,"mtime":1598481728767,"results":"80","hashOfConfig":"49"},{"size":3901,"mtime":1608594603982,"results":"81","hashOfConfig":"49"},{"size":1447,"mtime":1601351517027,"results":"82","hashOfConfig":"49"},{"size":908,"mtime":1606580978675,"results":"83","hashOfConfig":"49"},{"size":2226,"mtime":1602728145158,"results":"84","hashOfConfig":"49"},{"size":3173,"mtime":1609788138247,"results":"85","hashOfConfig":"49"},{"size":1461,"mtime":1612479648244,"results":"86","hashOfConfig":"49"},{"size":3899,"mtime":1603680077160,"results":"87","hashOfConfig":"49"},{"size":4265,"mtime":1611880649249,"results":"88","hashOfConfig":"49"},{"size":1662,"mtime":1612479450169,"results":"89","hashOfConfig":"49"},{"size":534,"mtime":1604082956557,"results":"90","hashOfConfig":"49"},{"size":2455,"mtime":1604083232381,"results":"91","hashOfConfig":"49"},{"size":2673,"mtime":1603932371331,"results":"92","hashOfConfig":"49"},{"size":2668,"mtime":1612479459917,"results":"93","hashOfConfig":"49"},{"size":806,"mtime":1608514230245,"results":"94","hashOfConfig":"49"},{"size":988,"mtime":1612482578043,"results":"95","hashOfConfig":"49"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},"ihjww1",{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"98"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"98"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"98"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"98"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"179"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"179"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"98"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\index.js",[],["197","198"],"C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\App.js",[],"C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\Helpers\\auth-helpers.js",[],"C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\Context\\user-context.jsx",[],"C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\Context\\modal-context.jsx",[],"C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\pages\\Usuarios.jsx",[],"C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\pages\\EditarUsuarios.jsx",["199"],"import React, { useEffect, useState } from \"react\";\r\nimport { Container, Typography } from \"@material-ui/core\";\r\nimport FormUsuarios from \"../components/FormUsuarios\";\r\nimport Axios from \"axios\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport { useModal } from \"../Context/modal-context\";\r\nimport { useFormik } from \"formik\";\r\nimport { usuario } from \"../Helpers/model\";\r\nfunction EditarUsuario() {\r\n  const history = useHistory();\r\n  const { setLoading } = useModal();\r\n  const { idUsuario } = useParams();\r\n  const [error, setError] = useState(false);\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      nombre: \"\",\r\n      apellido: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      telefono: \"\",\r\n      tipo_usuario: \"\",\r\n      isTrabajando: false,\r\n    },\r\n    validationSchema: usuario,\r\n    onSubmit: async (data) => {\r\n      if (\r\n        data.nombre === \"\" ||\r\n        data.apellido === \"\" ||\r\n        data.email === \"\" ||\r\n        data.password === \"\" ||\r\n        data.telefono === \"\"\r\n      ) {\r\n        setError(true);\r\n        setLoading(false);\r\n        return;\r\n      }\r\n      try {\r\n        await Axios.patch(`/usuarios/${idUsuario}`, data);\r\n        history.goBack();\r\n      } catch (error) {\r\n        setError(true);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    },\r\n  });\r\n  useEffect(() => {\r\n    const buscarUsuario = async () => {\r\n      const { data } = await Axios.get(`/usuarios/${idUsuario}`);\r\n      return data;\r\n    };\r\n    setLoading(true);\r\n    buscarUsuario().then((usuario) => {\r\n      formik.initialValues.nombre = usuario.nombre;\r\n      formik.initialValues.apellido = usuario.apellido;\r\n      formik.initialValues.email = usuario.email;\r\n      formik.initialValues.telefono = usuario.telefono;\r\n      formik.initialValues.tipo_usuario = usuario.tipo_usuario;\r\n      formik.initialValues.isTrabajando = usuario.isTrabajando;\r\n      setLoading(false);\r\n    });\r\n  }, [idUsuario]);\r\n  return (\r\n    <Container>\r\n      <Typography variant=\"h4\" align=\"center\" gutterBottom>\r\n        Editar Usuario\r\n      </Typography>\r\n      <FormUsuarios error={error} formik={formik} />\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default EditarUsuario;\r\n","C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\pages\\Empresas.jsx",["200"],"import React, { useEffect, useState } from \"react\";\r\nimport { Container, Typography, Box, Grid, TextField } from \"@material-ui/core\";\r\nimport CardEmpresa from \"../components/CardEmpresa\";\r\nimport { Add } from \"@material-ui/icons\";\r\nimport { SuccessButton, ErrorButton } from \"../components/Buttons\";\r\nimport Modal from \"../components/Modal\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Axios from \"axios\";\r\nimport { useModal } from \"../Context/modal-context\";\r\nimport { useUser } from \"../Context/user-context\";\r\nfunction Empresas() {\r\n  const {logOut} = useUser();\r\n  const { setLoading } = useModal();\r\n  const [empresas, setEmpresas] = useState([]);\r\n  const [openModal, setOpenModal] = useState(false);\r\n  const [empresa, setEmpresa] = useState(\"\");\r\n  const [term, setTerm] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    async function initialEmpresas() {\r\n      const { data } = await Axios.get(\"/empresa\");\r\n      return data;\r\n    }\r\n    setLoading(true);\r\n    initialEmpresas().then((empresas) => {\r\n      setEmpresas(empresas);\r\n    }).catch(()=>{\r\n      logOut();\r\n    })\r\n    .finally(()=>{\r\n      setLoading(false)\r\n    })\r\n  }, [setLoading,logOut]);\r\n\r\n  const handleSearchFilter = (cliente) => {\r\n    return function (x) {\r\n      return x.noCliente == (cliente) || !cliente;\r\n    };\r\n  };\r\n\r\n  const handleEliminarEmpresa = () => {\r\n    setOpenModal(true);\r\n    Axios.delete(`/empresa/${empresa}`)\r\n      .then(() => {\r\n        const newEmpresas = empresas.filter((emp) => emp._id !== empresa);\r\n        setEmpresas(newEmpresas);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      })\r\n      .finally(() => {\r\n        setOpenModal(false);\r\n      });\r\n  };\r\n\r\n  const handleOpenModalDelete = (id) => {\r\n    setOpenModal(true);\r\n    setEmpresa(id);\r\n  };\r\n  return (\r\n    <Container>\r\n      <Modal abierto={openModal} titulo=\"Â¿Seguro que desea Eliminar?\">\r\n        <SuccessButton onClick={handleEliminarEmpresa}>Aceptar</SuccessButton>\r\n        <ErrorButton onClick={() => setOpenModal(false)}>Cancelar</ErrorButton>\r\n      </Modal>\r\n      <Box alignItems=\"center\">\r\n        <Typography align=\"center\" variant=\"h4\">\r\n          Lista de Empresas\r\n        </Typography>\r\n        <Box textAlign=\"end\">\r\n          <Link to=\"/empresas/agregar\">\r\n            <SuccessButton startIcon={<Add />}>Agregar</SuccessButton>\r\n          </Link>\r\n        </Box>\r\n        <TextField\r\n          margin=\"normal\"\r\n          variant=\"outlined\"\r\n          helperText=\"Busca el codigo de empresa que tienen en el otro sistema\"\r\n          placeholder=\"Codigo\"\r\n          label=\"Busca por codigo de Empresa\"\r\n          fullWidth\r\n          value={term}\r\n          onChange={(texto) => setTerm(texto.target.value)}\r\n        />\r\n      </Box>\r\n      <Grid container spacing={2}>\r\n        {empresas.filter(handleSearchFilter(term)).map((empresa, index) => (\r\n          <Grid key={index} item xs={12} md={6}>\r\n            <CardEmpresa empresa={empresa} eliminar={handleOpenModalDelete} />\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Empresas;\r\n","C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\pages\\AgregarUsuarios.jsx",[],"C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\pages\\EditarEmpresa.jsx",[],"C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\pages\\AgregarEmpresa.jsx",[],"C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\pages\\AgregarContactoEmpresa.jsx",[],"C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\pages\\EditarContactoEmpresa.jsx",["201"],"import React, { useEffect, useState } from \"react\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport FormUsuarios from \"../components/FormUsuarios\";\r\nimport Axios from \"axios\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport { useModal } from \"../Context/modal-context\";\r\nimport { useFormik } from \"formik\";\r\nimport { usuario } from \"../Helpers/model\";\r\nfunction EditarContactoEmpresa() {\r\n  const { setLoading } = useModal();\r\n  const history = useHistory();\r\n  const { idUsuario } = useParams();\r\n  const [error, setError] = useState(false);\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      nombre: \"\",\r\n      apellido: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      telefono: \"\",\r\n      tipo_usuario: \"\",\r\n      isTrabajando: false,\r\n    },\r\n    validationSchema: usuario,\r\n    onSubmit: async (usuario) => {\r\n      setLoading(true);\r\n      if (\r\n        usuario.nombre === \"\" ||\r\n        usuario.apellido === \"\" ||\r\n        usuario.email === \"\" ||\r\n        usuario.password === \"\" ||\r\n        usuario.telefono === \"\"\r\n      ) {\r\n        setError(true);\r\n        setLoading(false);\r\n        return;\r\n      }\r\n      usuario.isTrabajando = false;\r\n      usuario.tipo_usuario = \"Cliente\";\r\n      try {\r\n        const { data } = await Axios.get(\r\n          `/empresaContacto/usuario/${idUsuario}`\r\n        );\r\n        await Axios.patch(`/empresaContacto/${data._id}`, usuario);\r\n        history.goBack();\r\n      } catch (error) {\r\n        setError(true);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    },\r\n  });\r\n  useEffect(() => {\r\n    async function initial() {\r\n      const { data } = await Axios.get(`/empresaContacto/usuario/${idUsuario}`);\r\n      return data;\r\n    }\r\n    setLoading(true);\r\n    initial().then((data) => {\r\n      formik.initialValues.nombre = data.usuario.nombre;\r\n      formik.initialValues.apellido = data.usuario.apellido;\r\n      formik.initialValues.email = data.usuario.email;\r\n      formik.initialValues.telefono = data.usuario.telefono;\r\n      formik.initialValues.tipo_usuario = data.usuario.tipo_usuario;\r\n      formik.initialValues.isTrabajando = data.usuario.isTrabajando;\r\n      setLoading(false);\r\n    });\r\n  }, [setLoading, idUsuario]);\r\n\r\n  return (\r\n    <>\r\n      <Typography variant=\"h4\" align=\"center\">\r\n        Contacto\r\n      </Typography>\r\n      <FormUsuarios error={error} formik={formik} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default EditarContactoEmpresa;\r\n","C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\pages\\Areas.jsx",[],"C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\pages\\EditarAreas.jsx",[],"C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\pages\\EditarEstacion.jsx",[],"C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\pages\\Estaciones.jsx",["202"],"C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\pages\\ContactoEmpresa.jsx",[],"C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\pages\\AgregarAreas.jsx",[],"C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\pages\\AgregarEstacion.jsx",[],"C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\pages\\QRList.jsx",[],"C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\pages\\GraficasAÃ±oArea.jsx",[],"C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\pages\\GraficasMes.jsx",["203"],"import React, { useState } from \"react\";\r\nimport { HorizontalBar, Bar } from \"react-chartjs-2\";\r\nimport {\r\n  Grid,\r\n  TextField,\r\n  Button,\r\n  MenuItem,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { PDFExport } from \"@progress/kendo-react-pdf\";\r\nimport moment from \"moment\";\r\nimport Axios from \"axios\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport \"chartjs-plugin-datalabels\";\r\n\r\nfunction GraficasMes() {\r\n  const { idEmpresa } = useParams();\r\n  const [Mes, setMes] = useState(\"\");\r\n  const [Tipo, setTipo] = useState(\"\");\r\n  const [volador, setVolador] = useState(undefined);\r\n  const [labels, setLabels] = useState([]);\r\n  const [abejas, setAbejas] = useState([]);\r\n  const [moscas, setMoscas] = useState([]);\r\n  //--\r\n  const [tijerilla, setTijerilla] = useState([]);\r\n  const [roedor, setRoedor] = useState([]);\r\n  const [frailecillos, setFrailecillos] = useState([]);\r\n  const [mosca, setMosca] = useState([]);\r\n  const [pinacate, setPinacate] = useState([]);\r\n  const [cochinilla, setCochinilla] = useState([]);\r\n  const [cucurachaAmericana, setCucarachaAme] = useState([]);\r\n  const [cucurachaAlemana, setCucarachaAlem] = useState([]);\r\n  const [araÃ±a, setAraÃ±a] = useState([]);\r\n  const [grillo, setGrillo] = useState([]);\r\n  const [hormiga, setHormiga] = useState([]);\r\n  const [ciempies, setCiempies] = useState([]);\r\n  const [alacran, setAlacran] = useState([]);\r\n  const [ver, setVer] = useState(false);\r\n\r\n  let pdfExportComponent;\r\n  const estations = [\r\n    {\r\n      value: \"Rastreros\",\r\n      label: \"Rastreros\",\r\n    },\r\n    {\r\n      value: \"Voladores\",\r\n      label: \"Voladores\",\r\n    },\r\n  ];\r\n  const data = {\r\n    labels: labels,\r\n    datasets: [\r\n      {\r\n        label: \"Moscas\",\r\n        backgroundColor: \"rgba(255,99,132,0.2)\",\r\n        borderColor: \"rgba(255,99,132,1)\",\r\n        borderWidth: 1,\r\n        hoverBackgroundColor: \"rgba(255,99,132,0.4)\",\r\n        hoverBorderColor: \"rgba(255,99,132,1)\",\r\n        data: moscas,\r\n      },\r\n      {\r\n        label: \"Abejas\",\r\n        backgroundColor: \"rgba(155,231,91,0.2)\",\r\n        borderColor: \"rgba(155,231,91,0.2)\",\r\n        borderWidth: 1,\r\n        hoverBackgroundColor: \"rgba(255,99,132,0.4)\",\r\n        hoverBorderColor: \"rgba(255,99,132,1)\",\r\n        data: abejas,\r\n      },\r\n    ],\r\n  };\r\n  const dataRastrero = {\r\n    labels: labels,\r\n    datasets: [\r\n      {\r\n        label: \"tijerilla\",\r\n        backgroundColor: \"rgba(255,99,132,0.2)\",\r\n        borderColor: \" rgb(255, 255, 255)\",\r\n        borderWidth: 1,\r\n        hoverBackgroundColor: \"rgba(255,99,132,0.4)\",\r\n        hoverBorderColor: \"rgba(255,99,132,1)\",\r\n        data: tijerilla,\r\n      },\r\n      {\r\n        label: \"roedor\",\r\n        backgroundColor: \"rgba(155,231,91,0.2)\",\r\n        borderColor: \" rgb(255, 255, 255)\",\r\n        borderWidth: 1,\r\n        hoverBackgroundColor: \"rgba(255,99,132,0.4)\",\r\n        hoverBorderColor: \"rgba(255,99,132,1)\",\r\n        data: roedor,\r\n      },\r\n      {\r\n        label: \"frailecillos\",\r\n        backgroundColor: \" rgb(147, 61, 228)\",\r\n        borderColor: \" rgb(255, 255, 255)\",\r\n        borderWidth: 1,\r\n        hoverBackgroundColor: \"rgba(255,99,132,0.4)\",\r\n        hoverBorderColor: \"rgba(255,99,132,1)\",\r\n        data: frailecillos,\r\n      },\r\n      {\r\n        label: \"mosca\",\r\n        backgroundColor: \" rgb(61, 217, 228)\",\r\n        borderColor: \" rgb(255, 255, 255))\",\r\n        borderWidth: 1,\r\n        hoverBackgroundColor: \"rgba(255,99,132,0.4)\",\r\n        hoverBorderColor: \"rgba(255,99,132,1)\",\r\n        data: mosca,\r\n      },\r\n      {\r\n        label: \"pinacate\",\r\n        backgroundColor: \" rgb(61, 86, 228)\",\r\n        borderColor: \" rgb(255, 255, 255)\",\r\n        borderWidth: 1,\r\n        hoverBackgroundColor: \"rgba(255,99,132,0.4)\",\r\n        hoverBorderColor: \"rgba(255,99,132,1)\",\r\n        data: pinacate,\r\n      },\r\n      {\r\n        label: \"cochinilla\",\r\n        backgroundColor: \" rgb(211, 228, 61)\",\r\n        borderColor: \" rgb(255, 255, 255)\",\r\n        borderWidth: 1,\r\n        hoverBackgroundColor: \"rgba(255,99,132,0.4)\",\r\n        hoverBorderColor: \"rgba(255,99,132,1)\",\r\n        data: cochinilla,\r\n      },\r\n      {\r\n        label: \"cucarachaAmericana\",\r\n        backgroundColor: \" rgb(67, 228, 61)\",\r\n        borderColor: \" rgb(255, 255, 255)\",\r\n        borderWidth: 1,\r\n        hoverBackgroundColor: \"rgba(255,99,132,0.4)\",\r\n        hoverBorderColor: \"rgba(255,99,132,1)\",\r\n        data: cucurachaAmericana,\r\n      },\r\n      {\r\n        label: \"cucarachaAlemana\",\r\n        backgroundColor: \" rgb(228, 61, 61)\",\r\n        borderColor: \" rgb(255, 255, 255)\",\r\n        borderWidth: 1,\r\n        hoverBackgroundColor: \"rgba(255,99,132,0.4)\",\r\n        hoverBorderColor: \"rgba(255,99,132,1)\",\r\n        data: cucurachaAlemana,\r\n      },\r\n      {\r\n        label: \"araÃ±a\",\r\n        backgroundColor: \" rgb(228, 61, 186)\",\r\n        borderColor: \" rgb(255, 255, 255)\",\r\n        borderWidth: 1,\r\n        hoverBackgroundColor: \"rgba(255,99,132,0.4)\",\r\n        hoverBorderColor: \"rgba(255,99,132,1)\",\r\n        data: araÃ±a,\r\n      },\r\n      {\r\n        label: \"hormiga\",\r\n        backgroundColor: \" rgb(195, 61, 228)\",\r\n        borderColor: \" rgb(255, 255, 255)\",\r\n        borderWidth: 1,\r\n        hoverBackgroundColor: \"rgba(255,99,132,0.4)\",\r\n        hoverBorderColor: \"rgba(255,99,132,1)\",\r\n        data: hormiga,\r\n      },\r\n      {\r\n        label: \"ciempies\",\r\n        backgroundColor: \" rgb(61, 228, 172)\",\r\n        borderColor: \" rgb(255, 255, 255)\",\r\n        borderWidth: 1,\r\n        hoverBackgroundColor: \"rgba(255,99,132,0.4)\",\r\n        hoverBorderColor: \"rgba(255,99,132,1)\",\r\n        data: ciempies,\r\n      },\r\n      {\r\n        label: \"alacran\",\r\n        backgroundColor: \" rgb(61, 228, 172)\",\r\n        borderColor: \" rgb(255, 255, 255)\",\r\n        borderWidth: 1,\r\n        hoverBackgroundColor: \"rgba(255,99,132,0.4)\",\r\n        hoverBorderColor: \"rgba(255,99,132,1)\",\r\n        data: alacran,\r\n      },\r\n      {\r\n        label: \"grillo\",\r\n        backgroundColor: \" rgb(228, 183, 61)\",\r\n        borderColor: \" rgb(255, 255, 255)\",\r\n        borderWidth: 1,\r\n        hoverBackgroundColor: \"rgba(255,99,132,0.4)\",\r\n        hoverBorderColor: \"rgba(255,99,132,1)\",\r\n        data: grillo,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const handleBuscar = async () => {\r\n    if (Mes === \"\" || Tipo === \"\") {\r\n      alert(\"Llenar los datos correctamente\");\r\n      return;\r\n    }\r\n\r\n    const grafica = {\r\n      mes: moment(Mes).format(\"MMMM\"),\r\n      ano: moment(Mes).format(\"YYYY\"),\r\n      tipo: Tipo,\r\n    };\r\n    const {\r\n      data: { graficas },\r\n    } = await Axios.post(`/graficas/mes/${idEmpresa}`, grafica);\r\n\r\n    if (!graficas) {\r\n      alert(\"No existe ningun registro\");\r\n      return;\r\n    }\r\n\r\n    if (Tipo === \"Voladores\") {\r\n      const labels = graficas.map((area) => {\r\n        return area.nombre;\r\n      });\r\n      const abejas = graficas.map((area) => {\r\n        return area.abeja;\r\n      });\r\n      const mosca = graficas.map((area) => {\r\n        return area.mosca;\r\n      });\r\n      setVolador(true);\r\n      setLabels(labels);\r\n      setAbejas(abejas);\r\n      setMoscas(mosca);\r\n    } else {\r\n      const labels = graficas.map((area) => {\r\n        return area.nombre;\r\n      });\r\n      const tijerilla = graficas.map((area) => {\r\n        return area.tijerilla;\r\n      });\r\n      const roedor = graficas.map((area) => {\r\n        return area.roedor;\r\n      });\r\n      const frailecillos = graficas.map((area) => {\r\n        return area.frailecillos;\r\n      });\r\n      const mosca = graficas.map((area) => {\r\n        return area.mosca;\r\n      });\r\n      const pinacate = graficas.map((area) => {\r\n        return area.pinacate;\r\n      });\r\n      const cochinilla = graficas.map((area) => {\r\n        return area.cochinilla;\r\n      });\r\n      const cucarachaAmericana = graficas.map((area) => {\r\n        return area.cucarachaAmericana;\r\n      });\r\n      const cucarachaAlemana = graficas.map((area) => {\r\n        return area.cucarachaAlemana;\r\n      });\r\n      const araÃ±a = graficas.map((area) => {\r\n        return area.araÃ±a;\r\n      });\r\n      const grillo = graficas.map((area) => {\r\n        return area.grillo;\r\n      });\r\n      const hormiga = graficas.map((area) => {\r\n        return area.hormiga;\r\n      });\r\n      const ciempies = graficas.map((area) => {\r\n        return area.ciempies;\r\n      });\r\n      const alacran = graficas.map((area) => {\r\n        return area.alacran;\r\n      });\r\n\r\n      setLabels(labels);\r\n      setVolador(false);\r\n      setTijerilla(tijerilla);\r\n      setRoedor(roedor);\r\n      setFrailecillos(frailecillos);\r\n      setMosca(mosca);\r\n      setPinacate(pinacate);\r\n      setCochinilla(cochinilla);\r\n      setCucarachaAme(cucarachaAmericana);\r\n      setCucarachaAlem(cucarachaAlemana);\r\n      setAraÃ±a(araÃ±a);\r\n      setGrillo(grillo);\r\n      setHormiga(hormiga);\r\n      setCiempies(ciempies);\r\n      setAlacran(alacran);\r\n    }\r\n    setVer(true);\r\n  };\r\n  return (\r\n    <>\r\n      <Grid\r\n        container\r\n        spacing={2}\r\n        alignItems=\"center\"\r\n        style={{ marginBottom: 15 }}\r\n      >\r\n        <Grid item md={4}>\r\n          <TextField\r\n            fullWidth\r\n            value={Mes}\r\n            type=\"month\"\r\n            label=\"\"\r\n            onChange={(e) => setMes(e.target.value)}\r\n            helperText=\"Seleccione mes y aÃ±o\"\r\n          />\r\n        </Grid>\r\n        <Grid item md={4}>\r\n          <TextField\r\n            fullWidth\r\n            select\r\n            label=\"Selecciona\"\r\n            value={Tipo}\r\n            onChange={(e) => {\r\n              setVer(false);\r\n              setTipo(e.target.value);\r\n            }}\r\n            helperText=\"Seleccione tipo de estacion\"\r\n          >\r\n            {estations.map((option, index) => (\r\n              <MenuItem key={index} value={option.value}>\r\n                {option.label}\r\n              </MenuItem>\r\n            ))}\r\n          </TextField>\r\n        </Grid>\r\n        <Grid item md={2}>\r\n          <Button\r\n            fullWidth\r\n            onClick={handleBuscar}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n          >\r\n            Aceptar\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <br />\r\n      {ver && (\r\n        <>\r\n          <Grid container>\r\n            <Grid item xs={12}>\r\n              <Button\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                color=\"primary\"\r\n                onClick={() => {\r\n                  pdfExportComponent.save();\r\n                }}\r\n              >\r\n                Generar archivo\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <PDFExport\r\n            paperSize=\"A4\"\r\n            scale={0.7}\r\n            margin=\"1cm\"\r\n            fileName={`${moment(Mes).format(\"MMMM\")}-reporte`}\r\n            landscape={true}\r\n            ref={(component) => (pdfExportComponent = component)}\r\n          >\r\n            <Grid container justify=\"center\">\r\n              <Grid item>\r\n                <Typography variant=\"h4\" gutterBottom>\r\n                  Reporte\r\n                </Typography>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid container>\r\n              <Grid item xs={12}>\r\n                <Bar\r\n                  plugins={{\r\n                    datalabels: {\r\n                      display: (ctx) => {\r\n                        return true;\r\n                      },\r\n                      formatter: (ctx, data) => {\r\n                        return `${data.dataIndex}`;\r\n                      },\r\n                    },\r\n                  }}\r\n                  data={volador ? data : dataRastrero}\r\n                  options={{\r\n                    responsive: true,\r\n                    maintainAspectRatio: true,\r\n                  }}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </PDFExport>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default GraficasMes;\r\n","C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\pages\\Graficas.jsx",[],"C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\pages\\Historial.jsx",[],"C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\pages\\Login.jsx",[],"C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\components\\PrivateRoute.jsx",[],"C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\pages\\Cliente.jsx",[],"C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\pages\\GraficasAnual.jsx",[],"C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\components\\Layout.jsx",[],"C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\components\\Buttons.jsx",[],"C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\components\\Modal.jsx",[],"C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\components\\FormUsuarios.jsx",[],"C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\components\\CardEmpresa.jsx",[],"C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\components\\CardArea.jsx",[],"C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\components\\FormEmpresa.jsx",[],"C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\components\\FormEstacion.jsx",[],"C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\components\\CardRevision.jsx",[],"C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\components\\TableRastrero.jsx",[],["204","205"],"C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\components\\TablaVoladores.jsx",[],"C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\components\\ContainerTablaAreaAnual.jsx",["206"],"import React from \"react\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport TableAreaAnualVolador from \"./TableAreaAnualVolador\";\r\nimport TableAreaAnualRastrero from \"./TableAreaAnualRastrero\";\r\nfunction ContainerTablaAreaAnual({ revision, tipo }) {\r\n  return (\r\n    <>\r\n      <div>\r\n        {tipo === \"Voladores\" ? (\r\n          <>\r\n              <TableAreaAnualVolador  aÃ±o={revision} titulo={\"moscas\"} />\r\n              <TableAreaAnualVolador  aÃ±o={revision} titulo={\"abejas\"} />\r\n          </>\r\n        ) : (\r\n              <>\r\n                <TableAreaAnualRastrero aÃ±o={revision} titulo=\"tijerilla\"/>\r\n                <TableAreaAnualRastrero aÃ±o={revision} titulo=\"roedor\"/>\r\n                <TableAreaAnualRastrero aÃ±o={revision} titulo=\"frailecillos\"/>\r\n                <TableAreaAnualRastrero aÃ±o={revision} titulo=\"mosca\"/>\r\n                <TableAreaAnualRastrero aÃ±o={revision} titulo=\"pinacate\"/>\r\n                <TableAreaAnualRastrero aÃ±o={revision} titulo=\"cochinilla\"/>\r\n                <TableAreaAnualRastrero aÃ±o={revision} titulo=\"cucarachaAmericana\"/>\r\n                <TableAreaAnualRastrero aÃ±o={revision} titulo=\"cucarachaAlemana\"/>\r\n                <TableAreaAnualRastrero aÃ±o={revision} titulo=\"araÃ±a\"/>\r\n                <TableAreaAnualRastrero aÃ±o={revision} titulo=\"grillo\"/>\r\n                <TableAreaAnualRastrero aÃ±o={revision} titulo=\"hormiga\"/>\r\n                <TableAreaAnualRastrero aÃ±o={revision} titulo=\"ciempies\"/>\r\n                <TableAreaAnualRastrero aÃ±o={revision} titulo=\"alacran\"/>\r\n              </>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ContainerTablaAreaAnual;\r\n","C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\components\\CardQR.jsx",[],"C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\components\\CardEstacion.jsx",[],"C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\components\\TableAreaAnualRastrero.jsx",[],"C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\components\\TableAreaAnualVolador.jsx",[],"C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\Helpers\\model.js",[],"C:\\Users\\cyasa\\Documents\\Desarrollo Freelance\\Control-Plaga\\frontend-plaga\\src\\components\\DescripcionEstaciones.jsx",[],{"ruleId":"207","replacedBy":"208"},{"ruleId":"209","replacedBy":"210"},{"ruleId":"211","severity":1,"message":"212","line":62,"column":6,"nodeType":"213","endLine":62,"endColumn":17,"suggestions":"214"},{"ruleId":"215","severity":1,"message":"216","line":37,"column":26,"nodeType":"217","messageId":"218","endLine":37,"endColumn":28},{"ruleId":"211","severity":1,"message":"219","line":68,"column":6,"nodeType":"213","endLine":68,"endColumn":29,"suggestions":"220"},{"ruleId":"215","severity":1,"message":"216","line":45,"column":23,"nodeType":"217","messageId":"218","endLine":45,"endColumn":25},{"ruleId":"221","severity":1,"message":"222","line":2,"column":10,"nodeType":"223","messageId":"224","endLine":2,"endColumn":23},{"ruleId":"207","replacedBy":"225"},{"ruleId":"209","replacedBy":"226"},{"ruleId":"221","severity":1,"message":"227","line":2,"column":10,"nodeType":"223","messageId":"224","endLine":2,"endColumn":20},"no-native-reassign",["228"],"no-negated-in-lhs",["229"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'formik.initialValues' and 'setLoading'. Either include them or remove the dependency array.","ArrayExpression",["230"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'formik.initialValues'. Either include it or remove the dependency array.",["231"],"no-unused-vars","'HorizontalBar' is defined but never used.","Identifier","unusedVar",["228"],["229"],"'Typography' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"232","fix":"233"},{"desc":"234","fix":"235"},"Update the dependencies array to be: [formik.initialValues, idUsuario, setLoading]",{"range":"236","text":"237"},"Update the dependencies array to be: [setLoading, idUsuario, formik.initialValues]",{"range":"238","text":"239"},[1942,1953],"[formik.initialValues, idUsuario, setLoading]",[2201,2224],"[setLoading, idUsuario, formik.initialValues]"]